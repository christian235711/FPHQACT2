create or replace
PACKAGE BODY FPHQACT2 AS

  FUNCTION ALIM_DONNEES_FDSQT2_ES (NOMLOG   create or replace
PACKAGE BODY FPHQACT2 AS

  FUNCTION ALIM_DONNEES_FDSQT2_ES (NOMLOG      VARCHAR2,
                                  P_DATE_TRAI   DATE,
                                  V_INSERTS     OUT NUMBER,
                                  V_UPDATES     OUT NUMBER,
                                  V_ERROR       OUT VARCHAR2) RETURN NUMBER IS
  begin
  declare
       P_DATE_SITU          date;
      V_ERR                NUMBER := 0;
      V_INS                NUMBER := 0;
      V_UPD                NUMBER := 0;
      FILE_ID              UTL_FILE.FILE_TYPE;
      RES                  NUMBER := 0;
      V_NOM_TRAIT          VARCHAR2(50) := 'ALIM_DONNEES_FDSQT2_ES';
      V_CODE_PAYS          VARCHAR2(2);
    
      v_ecart_km  NUMBER;
      --v_GIFP_PROJ_KM_FCT  NUMBER;

        CURSOR C_FDSQTT_TESTFORMAT_C IS  -- TT 

select
  to_date(Sysdate, 'DD/MM/YYYY') As Date_Traitement,  --Date_de_Traitement
FPHQT90.PY_CD_PAYS  AS   CD_PAYS ,
'EKIP'  AS   CD_SOURCE ,
FPHQT90.ID_RESEAU  AS   RESEAU ,
FPHQT90.IE_AFFAIRE  AS   CTR_NUM_1 ,
FPHQT90.IE_AFFAIRE  AS   CTR_NUM_2 ,
NULL  AS   BUY_BACK_TYPE ,
CASE ROLE_TIERS when 'CLIE' then  FPHQTTI.NIF  else null end CL_SIREN,  -- FPHQTTI.NIF  AS   CL_SIREN ,
case ROLE_TIERS when 'CLIE' then FPHQTTI.NOM else null end   CL_NOM , -- FPHQTTI.NOM  AS   CL_NOM ,
NULL  AS   TVA_CD ,
case ROLE_TIERS when 'CLIE' then FPHQTTI.TYPE_SEGMENT else null end CL_TYP_LIB, -- FPHQTTI.TYPE_SEGMENT  AS   CL_TYP_LIB ,
case ROLE_TIERS when 'CLIE' then  FPHQTTI.CODE_APE else null end  CL_APE_CD, -- FPHQTTI.CODE_APE  AS   CL_APE_CD ,
case ROLE_TIERS when 'CLIE' then FPHQTTI.SECT_ACTIVITE else null end   CL_APE_LIB, --FPHQTTI.SECT_ACTIVITE  AS   CL_APE_LIB ,
case ROLE_TIERS when 'PCLI' then  CONCAT(FPHQTTI.ANC_NO_RUE,concat(' ',FPHQTTI.ANC_NOM_RUE)) else null end CL_ADR_FACT, -- CONCAT(FPHQTTI.ANC_NO_RUE,' ',FPHQTTI.ANC_NOM_RUE) as CL_ADR_FACT, 
case  ROLE_TIERS when 'PCLI' then FPHQTTI.ANC_CODE_POSTAL else null end CL_ADR_CP,  -- FPHQTTI.ANC_CODE_POSTAL  AS   CL_ADR_CP ,
case  ROLE_TIERS when 'PCLI' then FPHQTTI.ANC_LOCALITE  else null end  CL_ADR_VILLE, --FPHQTTI.ANC_LOCALITE  AS   CL_ADR_VILLE ,
NULL  AS   CTR_RETAIL ,
NULL AS   CIVILITE_SIGNATAIRE, --FPHQTCL.CL_IN_IDTITRE (CD avec jointure sur table LIB : FNMVTI0)  AS   CIVILITE_SIGNATAIRE ,
NULL AS   NOM_SIGNATAIRE , --FPHQTCL.CL_RE_NOM1  AS   NOM_SIGNATAIRE ,
NULL AS   PRENOM_SIGNATAIRE , --FPHQTCL.CL_RE_PRNOM  AS   PRENOM_SIGNATAIRE ,
case ROLE_TIERS when 'CLIE' then FPHQTTI.TELEPHONE else null end TEL_CONTACT,  -- FPHQTTI.TELEPHONE  AS   TEL_CONTACT ,
case ROLE_TIERS when 'CLIE' then FPHQTTI.EMAIL else null end  EMAIL_SIGNATAIRE, -- FPHQTTI.EMAIL AS   EMAIL_SIGNATAIRE ,
FPHQT91.DUREE_TOT_I  AS   DUREE_INI ,
FPHQT90.KM_CONTRACTUEL_INI  AS   KM_PIVOT_INI ,
FPHQT90.MT_VR_I  AS   ER_PIVOT_INI ,
FPHQT90.DATE_MEL_FIN  AS   CTR_DT_FIN ,
NULL  AS   CTR_DMIN_B2 ,
NULL  AS   CTR_DMIN_B1 ,
FPHQT91.DUREE_TOT  AS   CTR_DTOT ,
NULL  AS   CTR_DMAX_B1 ,
NULL  AS   CTR_DMAX_B2 , 
 FPHQT90.BORNE_KM_INF_2  AS   CTR_KMIN_B2 ,
 FPHQT90.BORNE_KM_INF_1  AS   CTR_KMIN_B1 ,
 FPHQT90.KM_CONTRACTUEL   AS   CTR_KM_PIVOT ,
FPHQT90.BORNE_KM_SUPP_1  AS   CTR_KMAX_B1 ,
FPHQT90.BORNE_KM_SUPP_2  AS   CTR_KMAX_B2 ,
NULL  AS   CTR_ERMIN_B2 ,
NULL  AS   CTR_ERMIN_B1 ,
FPHQT90.MT_VR  AS   CTR_ER_HT ,
NULL  AS   CTR_ERMAX_B1 ,
NULL  AS   CTR_ERMAX_B2 ,
case VB_FLAG_PERTINENT when 'Y' then  FPHQTVB.VB_KM_REL else null end GIFP_DER_KM,  -- FPHQTVB.VB_KM_REL  AS   GIFP_DER_KM ,
case VB_FLAG_PERTINENT when 'Y' then  FPHQTVB.VB_DT_RELKM  else null end GIFP_DT_DER_KM, ---  FPHQTVB.VB_DT_RELKM  AS   GIFP_DT_DER_KM ,
case VB_FLAG_PERTINENT when 'Y' then FPHQTVB.VB_CD_SRCEVT  else null end  GIFP_ORIG_DER_KM, -- FPHQTVB.VB_CD_SRCEVT  AS   GIFP_ORIG_DER_KM ,


NVL(Fphqtvb.Vb_Km_Rel, '0') * NVL(fphqt90.KM_CONTRACTUEL, '0') / Months_Between(Sysdate, to_date(Fphqt90.Date_Megd, 'DD/MM/YYYY')) as GIFP_PROJ_KM_FCT,
/*
-- effacer : FPHQT90.(GIFP_DER_KM  / months_between (sysdate, DATE_MEGD) ) * KM_CONTRACTUEL   AS   GIFP_PROJ_KM_FCT ,
-----------------
CASE CTR_KM_PIVOT WHEN 0 THEN  null
                WHEN NULL then null
                else case GIFP_PROJ_KM_FCT when 0 then  null
                                          when null then null
                                          else case (NVL(GIFP_PROJ_KM_FCT,'0') - NVL(CTR_KM_PIVOT,'0')) when 0 then  null
                                                                                                      else (GIFP_PROJ_KM_FCT - CTR_KM_PIVOT) end  end  end  v_ecart_km,     
------------------
"IF H1.CTR_KM_PIVOT = 0 OR H1.CTR_KM_PIVOT IS NULL OR H1.GIFP_PROJ_KM_FCT = 0 OR H1.GIFP_PROJ_KM_FCT IS NULL OR (H1.GIFP_PROJ_KM_FCT - H1.CTR_KM_PIVOT) = 0 THEN
           v_ecart_km :=NULL;
        ELSE
           v_ecart_km := (H1.GIFP_PROJ_KM_FCT - H1.CTR_KM_PIVOT);
        END IF;.  AS   v_ecart_km ,"*/
NULL  AS   CTR_TYP_SOUP ,
NULL  AS   REDEV_KM_EXCED ,
FPHQT91.MT_LOYER_TOT_HT  AS   LOY_MTHT_FIN ,
FPHQT91.MT_HT_ECH + FPHQT91.MT_HT_SERV  AS   LOY_MT_HT ,
FPHQT91.MT_TTC_ECH + FPHQT91.MT_TTC_SERV  AS   LOY_MT_TTC ,
NULL  AS   LOY_FLG_GPF ,
CASE CODE_TYPE_SERVICE_BO WHEN 'MNT' THEN 'OUI'  ELSE 'NON' end  LOY_FLG_MAIN ,  -- FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS 
NULL  AS   LOY_PCT_CEM ,
CASE CODE_TYPE_SERVICE_BO WHEN 'ATR' THEN 'OUI' ELSE 'NON' END LOY_FLG_TR, --  FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   LOY_FLG_TR ,
CASE CODE_TYPE_SERVICE_BO WHEN 'ASP' THEN 'OUI' WHEN 'ASR' THEN 'OUI' WHEN 'AST' then 'OUI' else 'NON' end  LOY_FLG_ASS, -- FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   LOY_FLG_ASS ,
CASE CODE_TYPE_SERVICE_BO WHEN 'KUA' THEN 'OUI' else 'NON' end  LOY_FLG_IP, --FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   LOY_FLG_IP ,
NULL  AS   LOY_FLG_AFD ,
NULL  AS   LOY_FLG_CARBU ,
CASE CODE_TYPE_SERVICE_BO WHEN 'PNE' THEN 'OUI' ELSE 'NON' END FLAG_PNEUS_ETE, --FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   FLAG_PNEUS_ETE ,
CASE CODE_TYPE_SERVICE_BO WHEN 'PNH'THEN 'OUI' ELSE 'NON' END  FLAG_PNEUS_HIVER, --FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   FLAG_PNEUS_HIVER ,
CASE CODE_TYPE_SERVICE_BO WHEN 'PNH' THEN 'OUI' ELSE 'NON' end FLAG_VEHICULE_DE_REMPLACEMENT, --FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   FLAG_VEHICULE_DE_REMPLACEMENT ,
NULL  AS   FLAG_CEM_FLEX ,
case CODE_TYPE_SERVICE_BO when 'PN4' then 'OUI' ELSE 'NON' end FLAG_PNEU_MIXTE, --FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   FLAG_PNEU_MIXTE ,
NULL  AS   FLAG_JOCKEY ,
case CODE_TYPE_SERVICE_BO when 'PAR' then 'OUI' else 'NON' END FLAG_PASS_RESTIT,-- FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   FLAG_PASS_RESTIT ,
FPHQTFV.FV_CD_FAM_VEHICULE  AS   VEH_FAM ,
FPHQTFV.FV_LIB_FAM_VEHICULE  AS   VEH_LIB_LS ,
FPHQT90.CODE_PSA  AS   VEH_LCDV ,
FPHQT90.LIB_COMMERCIAL  AS   VEH_LCDV_LIB ,
NULL  AS   CARROSSERIE ,
NULL  AS   VEH_COUL ,
FPHQT90.CODE_GENRE  AS   VEH_GENRE ,
FPHQT90.ENERGIE  AS   VEH_NRJ ,
FPHQT90.EMISSION_CO2  AS   VEH_CO2 ,
FPHQT90.PUISSANCE  AS   VEH_PUIS_FISC ,
FPHQT90.VIN  AS   VEH_TYP_MINE ,
FPHQT90.VIN  AS   VEH_NO_SERIE ,
NULL AS VEH_BLVD, -------------------------- FPHQT90.CODE_BLVD  AS   VEH_BLVD , ---------------------- A ALIMENTER QUAND L'INFO SERA DISPONIBLE
FPHQT91.IMMATRICULATION  AS   VEH_NO_IMMAT ,
FPHQT90.DATE_LIVRAISON  AS   CTR_DT_LIV ,
case ROLE_TIERS when 'CHAU' then FPHQTTI.NOM else null end NOM_CHAUFFEUR , -- FPHQTTI.NOM  AS   NOM_CHAUFFEUR ,
FPHQT90.CODE_GENRE  AS   GENRE_CD_TRANSCO ,
FPHQT90.MT_CATALOGUE  AS   VEH_MTHT_CAT ,
FPHQT90.MT_OPTIONS  AS   VEH_MTHT_OPT ,
FPHQT90.POURC_REMISE  AS   VEH_PCT_REM ,
FPHQT90.MT_ACCESSOIRES  AS   VEH_MTHT_ACC ,
NULL  AS   VEH_MTHT_TRANS ,
NULL  AS   VEH_GARN ,
NULL  AS   VEH_OPT1 ,
NULL  AS   VEH_OPT2 ,
NULL  AS   VEH_OPT3 ,
NULL  AS   VEH_OPT4 ,
NULL  AS   VEH_OPT5 ,
NULL  AS   VEH_OPT6 ,
NULL  AS   VEH_OPT7 ,
NULL  AS   VEH_OPT8 ,
NULL  AS   VEH_OPT9 ,
NULL  AS   VEH_OPT10 ,
NULL  AS   VEH_OPT11 ,
NULL  AS   VEH_ACC1 ,
NULL  AS   VEH_ACC2 ,
NULL  AS   VEH_ACC3 ,
NULL  AS   VEH_ACC4 ,
NULL  AS   VEH_ACC5 ,
NULL  AS   VEH_TRF1 ,
NULL  AS   VEH_TRF2 ,
NULL  AS   VEH_TRF3 ,
NULL  AS   VEH_TRF4 ,
FPHQT90.RACH_CODE_RRDI  AS   PDV_RP_RRDI ,
case ROLE_TIERS when 'RCLI' then FPHQTTI.NOM  else null end PDV_RP_NOM, -- FPHQTTI.NOM  AS   PDV_RP_NOM ,
case ROLE_TIERS when 'RCLI' then FPHQTTI.NOM else null end  PDV_REPRENEUR_RAISON_SOCIALE, -- FPHQTTI.NOM  AS   PDV_REPRENEUR_RAISON_SOCIALE ,
case  ROLE_TIERS when 'RCLI' then  CONCAT(FPHQTTI.ANC_NO_RUE, concat(' ', FPHQTTI.ANC_NOM_RUE)) else null end PDV_REPRENEUR_ADRESSE,-- CONCAT(FPHQTTI.ANC_NO_RUE, ' ', FPHQTTI.ANC_NOM_RUE)  AS   PDV_REPRENEUR_ADRESSE ,
case ROLE_TIERS when 'RCLI' then  FPHQTTI.ANC_CODE_POSTAL else null end  PDV_REPRENEUR_CODE_POSTAL, -- FPHQTTI.ANC_CODE_POSTAL  AS   PDV_REPRENEUR_CODE_POSTAL ,
case ROLE_TIERS when 'RCLI' then FPHQTTI.ANC_LOCALITE else null end PDV_REPRENEUR_VILLE, -- FPHQTTI.ANC_LOCALITE  AS   PDV_REPRENEUR_VILLE ,
NULL  AS   PDV_FT_RRDI ,
NULL  AS   PDV_FT_NOM ,
NULL  AS   CD_VENDEUR ,
NULL  AS   PDV_VD_NOM ,
NULL  AS   PDV_FOURNISSEUR_RAISON_SOCIALE ,
NULL  AS   PDV_FOURNISSEUR_ADRESSE ,
NULL  AS   PDV_FOURNISSEUR_CODE_POSTAL ,
NULL  AS   PDV_FOURNISSEUR_VILLE 


from FPHQT90, FPHQT91, FPHQT92, FPHQTTI, FPHQTVB, FPHQTDE, FPHQTFV
where FPHQT90.IE_AFFAIRE = FPHQT91.IE_AFFAIRE
AND FPHQT92.IE_AFFAIRE(+) = FPHQT90.IE_AFFAIRE
AND FPHQTTI.IE_AFFAIRE(+) = FPHQT90.IE_AFFAIRE
AND FPHQTVB.VB_VIN(+) = FPHQT90.VIN
AND FPHQT90.IE_AFFAIRE = FPHQTDE.DE_NUM_CONTRAT(+)
AND FPHQTDE.DE_FG_VERSION(+) = 1
AND FPHQTFV.FV_CD_FAM_VEHICULE(+) = FPHQTDE.FV_CD_FAM_VEHICULE
AND FPHQTFV.FV_CDPAYS(+) = FPHQTDE.PY_CD_PAYS;   -- AVANT / AND FPHQTFV.FC_CD_PAYS(+) = FPHQTDE.PY_CD_PAYS;
     /*  ici vous avez mis fdsdwh or votre table temporaire se trouve dans fds */  /* FDSDWH.FDSQTTRFP  */
    
    
    
   BEGIN

				FILE_ID := FPHQAUT.F_OPEN(NOMLOG);
				RES := FPHQAUT.F_WRITE(FILE_ID, 'ALIM_DONNEES_FDSQT2_ES ## Alimentation de la table FPHQT_ES_CTT#');  /* T */  /* ALIM_FDSQTRFP et FDSQTRFP avant  */
				RES := FPHQAUT.F_WRITE(FILE_ID, 'ALIM_DONNEES_FDSQT2_ES ## Flux plusieurs tables   ##'); /*  TT  */
		
		
				FOR S_FDSQTT_TESTFORMAT_C IN C_FDSQTT_TESTFORMAT_C  LOOP  /*  TT IN TT  */   /* S_FDSQA_FORMA_CHRISTIAN */
				

					BEGIN

						IF V_ERR=1 THEN EXIT;   /* exit permet de sortir de la boucle (UNIQUEMENT) */
						END IF;

						IF MOD(V_UPD + V_INS, 100)=0 THEN COMMIT;
						END IF;

           if  (S_FDSQTT_TESTFORMAT_C.CTR_KM_PIVOT = 0) or (S_FDSQTT_TESTFORMAT_C.CTR_KM_PIVOT is null)  then v_ecart_km := null ;
           elsif  (S_FDSQTT_TESTFORMAT_C.GIFP_PROJ_KM_FCT = 0) or (S_FDSQTT_TESTFORMAT_C.GIFP_PROJ_KM_FCT is null) 
                    or ((NVL(S_FDSQTT_TESTFORMAT_C.GIFP_PROJ_KM_FCT,'0') - NVL(S_FDSQTT_TESTFORMAT_C.CTR_KM_PIVOT,'0')) =0 ) then v_ecart_km := null;
          else   v_ecart_km := S_FDSQTT_TESTFORMAT_C.GIFP_PROJ_KM_FCT - S_FDSQTT_TESTFORMAT_C.CTR_KM_PIVOT ;
          end if; 
           
 /*CASE CTR_KM_PIVOT WHEN 0 THEN  null
                WHEN NULL then null
                else case GIFP_PROJ_KM_FCT when 0 then  null
                                          when null then null
                                          else case (NVL(GIFP_PROJ_KM_FCT,'0') - NVL(CTR_KM_PIVOT,'0')) when 0 then  null
                                                                                                 else (GIFP_PROJ_KM_FCT - CTR_KM_PIVOT) end  end  end  v_ecart_km,   
*/     


						INSERT INTO FPHQT_ES_CTT  /* T */
								(                 
Date_Traitement,         
CD_PAYS ,
CD_SOURCE ,
RESEAU ,
CTR_NUM_1 ,
CTR_NUM_2 ,
BUY_BACK_TYPE ,
CL_SIREN ,
CL_NOM ,
TVA_CD ,
CL_TYP_LIB ,
CL_APE_CD ,
CL_APE_LIB ,
CL_ADR_FACT ,
CL_ADR_CP ,
CL_ADR_VILLE ,
CTR_RETAIL ,
CIVILITE_SIGNATAIRE ,
NOM_SIGNATAIRE ,
PRENOM_SIGNATAIRE ,
TEL_CONTACT ,
EMAIL_SIGNATAIRE ,
DUREE_INI ,
KM_PIVOT_INI ,
ER_PIVOT_INI ,
CTR_DT_FIN ,
CTR_DMIN_B2 ,
CTR_DMIN_B1 ,
CTR_DTOT ,
CTR_DMAX_B1 ,
CTR_DMAX_B2 ,
CTR_KMIN_B2 ,
CTR_KMIN_B1 ,
CTR_KM_PIVOT ,
CTR_KMAX_B1 ,
CTR_KMAX_B2 ,
CTR_ERMIN_B2 ,
CTR_ERMIN_B1 ,
CTR_ER_HT ,
CTR_ERMAX_B1 ,
CTR_ERMAX_B2 ,
GIFP_DER_KM ,
GIFP_DT_DER_KM ,
GIFP_ORIG_DER_KM ,
GIFP_PROJ_KM_FCT ,
v_ecart_km , ------------
CTR_TYP_SOUP ,
REDEV_KM_EXCED ,
LOY_MTHT_FIN ,
LOY_MT_HT ,
LOY_MT_TTC ,
LOY_FLG_GPF ,
LOY_FLG_MAIN ,
LOY_PCT_CEM ,
LOY_FLG_TR ,
LOY_FLG_ASS ,
LOY_FLG_IP ,
LOY_FLG_AFD ,
LOY_FLG_CARBU ,
FLAG_PNEUS_ETE ,
FLAG_PNEUS_HIVER ,
FLAG_VEHICULE_DE_REMPLACEMENT ,
FLAG_CEM_FLEX ,
FLAG_PNEU_MIXTE ,
FLAG_JOCKEY ,
FLAG_PASS_RESTIT ,
VEH_FAM ,
VEH_LIB_LS ,
VEH_LCDV ,
VEH_LCDV_LIB ,
CARROSSERIE ,
VEH_COUL ,
VEH_GENRE ,
VEH_NRJ ,
VEH_CO2 ,
VEH_PUIS_FISC ,
VEH_TYP_MINE ,
VEH_NO_SERIE ,
VEH_BLVD ,
VEH_NO_IMMAT ,
CTR_DT_LIV ,
NOM_CHAUFFEUR ,
GENRE_CD_TRANSCO ,
VEH_MTHT_CAT ,
VEH_MTHT_OPT ,
VEH_PCT_REM ,
VEH_MTHT_ACC ,
VEH_MTHT_TRANS ,
VEH_GARN ,
VEH_OPT1 ,
VEH_OPT2 ,
VEH_OPT3 ,
VEH_OPT4 ,
VEH_OPT5 ,
VEH_OPT6 ,
VEH_OPT7 ,
VEH_OPT8 ,
VEH_OPT9 ,
VEH_OPT10 ,
VEH_OPT11 ,
VEH_ACC1 ,
VEH_ACC2 ,
VEH_ACC3 ,
VEH_ACC4 ,
VEH_ACC5 ,
VEH_TRF1 ,
VEH_TRF2 ,
VEH_TRF3 ,
VEH_TRF4 ,
PDV_RP_RRDI ,
PDV_RP_NOM ,
PDV_REPRENEUR_RAISON_SOCIALE ,
PDV_REPRENEUR_ADRESSE ,
PDV_REPRENEUR_CODE_POSTAL ,
PDV_REPRENEUR_VILLE ,
PDV_FT_RRDI ,
PDV_FT_NOM ,
CD_VENDEUR ,
PDV_VD_NOM ,
PDV_FOURNISSEUR_RAISON_SOCIALE ,
PDV_FOURNISSEUR_ADRESSE ,
PDV_FOURNISSEUR_CODE_POSTAL ,
PDV_FOURNISSEUR_VILLE 

								)
						VALUES
								(                /* TT */
                
S_FDSQTT_TESTFORMAT_C.Date_Traitement ,
S_FDSQTT_TESTFORMAT_C.CD_PAYS ,
S_FDSQTT_TESTFORMAT_C.CD_SOURCE ,
S_FDSQTT_TESTFORMAT_C.RESEAU ,
S_FDSQTT_TESTFORMAT_C.CTR_NUM_1 ,
S_FDSQTT_TESTFORMAT_C.CTR_NUM_2 ,
S_FDSQTT_TESTFORMAT_C.BUY_BACK_TYPE ,
S_FDSQTT_TESTFORMAT_C.CL_SIREN ,
S_FDSQTT_TESTFORMAT_C.CL_NOM ,
S_FDSQTT_TESTFORMAT_C.TVA_CD ,
S_FDSQTT_TESTFORMAT_C.CL_TYP_LIB ,
S_FDSQTT_TESTFORMAT_C.CL_APE_CD ,
S_FDSQTT_TESTFORMAT_C.CL_APE_LIB ,
S_FDSQTT_TESTFORMAT_C.CL_ADR_FACT ,
S_FDSQTT_TESTFORMAT_C.CL_ADR_CP ,
S_FDSQTT_TESTFORMAT_C.CL_ADR_VILLE ,
S_FDSQTT_TESTFORMAT_C.CTR_RETAIL ,
S_FDSQTT_TESTFORMAT_C.CIVILITE_SIGNATAIRE ,
S_FDSQTT_TESTFORMAT_C.NOM_SIGNATAIRE ,
S_FDSQTT_TESTFORMAT_C.PRENOM_SIGNATAIRE ,
S_FDSQTT_TESTFORMAT_C.TEL_CONTACT ,
S_FDSQTT_TESTFORMAT_C.EMAIL_SIGNATAIRE ,
S_FDSQTT_TESTFORMAT_C.DUREE_INI ,
S_FDSQTT_TESTFORMAT_C.KM_PIVOT_INI ,
S_FDSQTT_TESTFORMAT_C.ER_PIVOT_INI ,
S_FDSQTT_TESTFORMAT_C.CTR_DT_FIN ,
S_FDSQTT_TESTFORMAT_C.CTR_DMIN_B2 ,
S_FDSQTT_TESTFORMAT_C.CTR_DMIN_B1 ,
S_FDSQTT_TESTFORMAT_C.CTR_DTOT ,
S_FDSQTT_TESTFORMAT_C.CTR_DMAX_B1 ,
S_FDSQTT_TESTFORMAT_C.CTR_DMAX_B2 ,
S_FDSQTT_TESTFORMAT_C.CTR_KMIN_B2 ,
S_FDSQTT_TESTFORMAT_C.CTR_KMIN_B1 ,
S_FDSQTT_TESTFORMAT_C.CTR_KM_PIVOT ,
S_FDSQTT_TESTFORMAT_C.CTR_KMAX_B1 ,
S_FDSQTT_TESTFORMAT_C.CTR_KMAX_B2 ,
S_FDSQTT_TESTFORMAT_C.CTR_ERMIN_B2 ,
S_FDSQTT_TESTFORMAT_C.CTR_ERMIN_B1 ,
S_FDSQTT_TESTFORMAT_C.CTR_ER_HT ,
S_FDSQTT_TESTFORMAT_C.CTR_ERMAX_B1 ,
S_FDSQTT_TESTFORMAT_C.CTR_ERMAX_B2 ,
S_FDSQTT_TESTFORMAT_C.GIFP_DER_KM ,
S_FDSQTT_TESTFORMAT_C.GIFP_DT_DER_KM ,
S_FDSQTT_TESTFORMAT_C.GIFP_ORIG_DER_KM ,
S_FDSQTT_TESTFORMAT_C.GIFP_PROJ_KM_FCT ,
v_ecart_km , --------------------
S_FDSQTT_TESTFORMAT_C.CTR_TYP_SOUP ,
S_FDSQTT_TESTFORMAT_C.REDEV_KM_EXCED ,
S_FDSQTT_TESTFORMAT_C.LOY_MTHT_FIN ,
S_FDSQTT_TESTFORMAT_C.LOY_MT_HT ,
S_FDSQTT_TESTFORMAT_C.LOY_MT_TTC ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_GPF ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_MAIN ,
S_FDSQTT_TESTFORMAT_C.LOY_PCT_CEM ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_TR ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_ASS ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_IP ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_AFD ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_CARBU ,
S_FDSQTT_TESTFORMAT_C.FLAG_PNEUS_ETE ,
S_FDSQTT_TESTFORMAT_C.FLAG_PNEUS_HIVER ,
S_FDSQTT_TESTFORMAT_C.FLAG_VEHICULE_DE_REMPLACEMENT ,
S_FDSQTT_TESTFORMAT_C.FLAG_CEM_FLEX ,
S_FDSQTT_TESTFORMAT_C.FLAG_PNEU_MIXTE ,
S_FDSQTT_TESTFORMAT_C.FLAG_JOCKEY ,
S_FDSQTT_TESTFORMAT_C.FLAG_PASS_RESTIT ,
S_FDSQTT_TESTFORMAT_C.VEH_FAM ,
S_FDSQTT_TESTFORMAT_C.VEH_LIB_LS ,
S_FDSQTT_TESTFORMAT_C.VEH_LCDV ,
S_FDSQTT_TESTFORMAT_C.VEH_LCDV_LIB ,
S_FDSQTT_TESTFORMAT_C.CARROSSERIE ,
S_FDSQTT_TESTFORMAT_C.VEH_COUL ,
S_FDSQTT_TESTFORMAT_C.VEH_GENRE ,
S_FDSQTT_TESTFORMAT_C.VEH_NRJ ,
S_FDSQTT_TESTFORMAT_C.VEH_CO2 ,
S_FDSQTT_TESTFORMAT_C.VEH_PUIS_FISC ,
S_FDSQTT_TESTFORMAT_C.VEH_TYP_MINE ,
S_FDSQTT_TESTFORMAT_C.VEH_NO_SERIE ,
S_FDSQTT_TESTFORMAT_C.VEH_BLVD ,
S_FDSQTT_TESTFORMAT_C.VEH_NO_IMMAT ,
S_FDSQTT_TESTFORMAT_C.CTR_DT_LIV ,
S_FDSQTT_TESTFORMAT_C.NOM_CHAUFFEUR ,
S_FDSQTT_TESTFORMAT_C.GENRE_CD_TRANSCO ,
S_FDSQTT_TESTFORMAT_C.VEH_MTHT_CAT ,
S_FDSQTT_TESTFORMAT_C.VEH_MTHT_OPT ,
S_FDSQTT_TESTFORMAT_C.VEH_PCT_REM ,
S_FDSQTT_TESTFORMAT_C.VEH_MTHT_ACC ,
S_FDSQTT_TESTFORMAT_C.VEH_MTHT_TRANS ,
S_FDSQTT_TESTFORMAT_C.VEH_GARN ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT1 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT2 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT3 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT4 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT5 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT6 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT7 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT8 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT9 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT10 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT11 ,
S_FDSQTT_TESTFORMAT_C.VEH_ACC1 ,
S_FDSQTT_TESTFORMAT_C.VEH_ACC2 ,
S_FDSQTT_TESTFORMAT_C.VEH_ACC3 ,
S_FDSQTT_TESTFORMAT_C.VEH_ACC4 ,
S_FDSQTT_TESTFORMAT_C.VEH_ACC5 ,
S_FDSQTT_TESTFORMAT_C.VEH_TRF1 ,
S_FDSQTT_TESTFORMAT_C.VEH_TRF2 ,
S_FDSQTT_TESTFORMAT_C.VEH_TRF3 ,
S_FDSQTT_TESTFORMAT_C.VEH_TRF4 ,
S_FDSQTT_TESTFORMAT_C.PDV_RP_RRDI ,
S_FDSQTT_TESTFORMAT_C.PDV_RP_NOM ,
S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_RAISON_SOCIALE ,
S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_ADRESSE ,
S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_CODE_POSTAL ,
S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_VILLE ,
S_FDSQTT_TESTFORMAT_C.PDV_FT_RRDI ,
S_FDSQTT_TESTFORMAT_C.PDV_FT_NOM ,
S_FDSQTT_TESTFORMAT_C.CD_VENDEUR ,
S_FDSQTT_TESTFORMAT_C.PDV_VD_NOM ,
S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_RAISON_SOCIALE ,
S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_ADRESSE ,
S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_CODE_POSTAL ,
S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_VILLE 								
								);

						V_INS := V_INS + 1;

					
					EXCEPTION

						WHEN DUP_VAL_ON_INDEX THEN
						UPDATE  FPH.FPHQT_ES_CTT     /* T */
						SET     /* TT */
Date_Traitement  =  S_FDSQTT_TESTFORMAT_C.Date_Traitement ,
--CD_PAYS  =  S_FDSQTT_TESTFORMAT_C.CD_PAYS ,
CD_SOURCE  =  S_FDSQTT_TESTFORMAT_C.CD_SOURCE ,
RESEAU  =  S_FDSQTT_TESTFORMAT_C.RESEAU ,
--CTR_NUM_1  =  S_FDSQTT_TESTFORMAT_C.CTR_NUM_1 ,
--CTR_NUM_2  =  S_FDSQTT_TESTFORMAT_C.CTR_NUM_2 ,
BUY_BACK_TYPE  =  S_FDSQTT_TESTFORMAT_C.BUY_BACK_TYPE ,
CL_SIREN  =  S_FDSQTT_TESTFORMAT_C.CL_SIREN ,
CL_NOM  =  S_FDSQTT_TESTFORMAT_C.CL_NOM ,
TVA_CD  =  S_FDSQTT_TESTFORMAT_C.TVA_CD ,
CL_TYP_LIB  =  S_FDSQTT_TESTFORMAT_C.CL_TYP_LIB ,
CL_APE_CD  =  S_FDSQTT_TESTFORMAT_C.CL_APE_CD ,
CL_APE_LIB  =  S_FDSQTT_TESTFORMAT_C.CL_APE_LIB ,
CL_ADR_FACT  =  S_FDSQTT_TESTFORMAT_C.CL_ADR_FACT ,
CL_ADR_CP  =  S_FDSQTT_TESTFORMAT_C.CL_ADR_CP ,
CL_ADR_VILLE  =  S_FDSQTT_TESTFORMAT_C.CL_ADR_VILLE ,
CTR_RETAIL  =  S_FDSQTT_TESTFORMAT_C.CTR_RETAIL ,
CIVILITE_SIGNATAIRE  =  S_FDSQTT_TESTFORMAT_C.CIVILITE_SIGNATAIRE ,
NOM_SIGNATAIRE  =  S_FDSQTT_TESTFORMAT_C.NOM_SIGNATAIRE ,
PRENOM_SIGNATAIRE  =  S_FDSQTT_TESTFORMAT_C.PRENOM_SIGNATAIRE ,
TEL_CONTACT  =  S_FDSQTT_TESTFORMAT_C.TEL_CONTACT ,
EMAIL_SIGNATAIRE  =  S_FDSQTT_TESTFORMAT_C.EMAIL_SIGNATAIRE ,
DUREE_INI  =  S_FDSQTT_TESTFORMAT_C.DUREE_INI ,
KM_PIVOT_INI  =  S_FDSQTT_TESTFORMAT_C.KM_PIVOT_INI ,
ER_PIVOT_INI  =  S_FDSQTT_TESTFORMAT_C.ER_PIVOT_INI ,
CTR_DT_FIN  =  S_FDSQTT_TESTFORMAT_C.CTR_DT_FIN ,
CTR_DMIN_B2  =  S_FDSQTT_TESTFORMAT_C.CTR_DMIN_B2 ,
CTR_DMIN_B1  =  S_FDSQTT_TESTFORMAT_C.CTR_DMIN_B1 ,
CTR_DTOT  =  S_FDSQTT_TESTFORMAT_C.CTR_DTOT ,
CTR_DMAX_B1  =  S_FDSQTT_TESTFORMAT_C.CTR_DMAX_B1 ,
CTR_DMAX_B2  =  S_FDSQTT_TESTFORMAT_C.CTR_DMAX_B2 ,
CTR_KMIN_B2  =  S_FDSQTT_TESTFORMAT_C.CTR_KMIN_B2 ,
CTR_KMIN_B1  =  S_FDSQTT_TESTFORMAT_C.CTR_KMIN_B1 ,
CTR_KM_PIVOT  =  S_FDSQTT_TESTFORMAT_C.CTR_KM_PIVOT ,
CTR_KMAX_B1  =  S_FDSQTT_TESTFORMAT_C.CTR_KMAX_B1 ,
CTR_KMAX_B2  =  S_FDSQTT_TESTFORMAT_C.CTR_KMAX_B2 ,
CTR_ERMIN_B2  =  S_FDSQTT_TESTFORMAT_C.CTR_ERMIN_B2 ,
CTR_ERMIN_B1  =  S_FDSQTT_TESTFORMAT_C.CTR_ERMIN_B1 ,
CTR_ER_HT  =  S_FDSQTT_TESTFORMAT_C.CTR_ER_HT ,
CTR_ERMAX_B1  =  S_FDSQTT_TESTFORMAT_C.CTR_ERMAX_B1 ,
CTR_ERMAX_B2  =  S_FDSQTT_TESTFORMAT_C.CTR_ERMAX_B2 ,
GIFP_DER_KM  =  S_FDSQTT_TESTFORMAT_C.GIFP_DER_KM ,
GIFP_DT_DER_KM  =  S_FDSQTT_TESTFORMAT_C.GIFP_DT_DER_KM ,
GIFP_ORIG_DER_KM  =  S_FDSQTT_TESTFORMAT_C.GIFP_ORIG_DER_KM ,
GIFP_PROJ_KM_FCT  =  S_FDSQTT_TESTFORMAT_C.GIFP_PROJ_KM_FCT ,
v_ecart_km  =  v_ecart_km ,
CTR_TYP_SOUP  =  S_FDSQTT_TESTFORMAT_C.CTR_TYP_SOUP ,
REDEV_KM_EXCED  =  S_FDSQTT_TESTFORMAT_C.REDEV_KM_EXCED ,
LOY_MTHT_FIN  =  S_FDSQTT_TESTFORMAT_C.LOY_MTHT_FIN ,
LOY_MT_HT  =  S_FDSQTT_TESTFORMAT_C.LOY_MT_HT ,
LOY_MT_TTC  =  S_FDSQTT_TESTFORMAT_C.LOY_MT_TTC ,
LOY_FLG_GPF  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_GPF ,
LOY_FLG_MAIN  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_MAIN ,
LOY_PCT_CEM  =  S_FDSQTT_TESTFORMAT_C.LOY_PCT_CEM ,
LOY_FLG_TR  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_TR ,
LOY_FLG_ASS  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_ASS ,
LOY_FLG_IP  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_IP ,
LOY_FLG_AFD  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_AFD ,
LOY_FLG_CARBU  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_CARBU ,
FLAG_PNEUS_ETE  =  S_FDSQTT_TESTFORMAT_C.FLAG_PNEUS_ETE ,
FLAG_PNEUS_HIVER  =  S_FDSQTT_TESTFORMAT_C.FLAG_PNEUS_HIVER ,
FLAG_VEHICULE_DE_REMPLACEMENT  =  S_FDSQTT_TESTFORMAT_C.FLAG_VEHICULE_DE_REMPLACEMENT ,
FLAG_CEM_FLEX  =  S_FDSQTT_TESTFORMAT_C.FLAG_CEM_FLEX ,
FLAG_PNEU_MIXTE  =  S_FDSQTT_TESTFORMAT_C.FLAG_PNEU_MIXTE ,
FLAG_JOCKEY  =  S_FDSQTT_TESTFORMAT_C.FLAG_JOCKEY ,
FLAG_PASS_RESTIT  =  S_FDSQTT_TESTFORMAT_C.FLAG_PASS_RESTIT ,
--VEH_FAM  =  S_FDSQTT_TESTFORMAT_C.VEH_FAM ,
VEH_LIB_LS  =  S_FDSQTT_TESTFORMAT_C.VEH_LIB_LS ,
VEH_LCDV  =  S_FDSQTT_TESTFORMAT_C.VEH_LCDV ,
VEH_LCDV_LIB  =  S_FDSQTT_TESTFORMAT_C.VEH_LCDV_LIB ,
CARROSSERIE  =  S_FDSQTT_TESTFORMAT_C.CARROSSERIE ,
VEH_COUL  =  S_FDSQTT_TESTFORMAT_C.VEH_COUL ,
VEH_GENRE  =  S_FDSQTT_TESTFORMAT_C.VEH_GENRE ,
VEH_NRJ  =  S_FDSQTT_TESTFORMAT_C.VEH_NRJ ,
VEH_CO2  =  S_FDSQTT_TESTFORMAT_C.VEH_CO2 ,
VEH_PUIS_FISC  =  S_FDSQTT_TESTFORMAT_C.VEH_PUIS_FISC ,
--VEH_TYP_MINE  =  S_FDSQTT_TESTFORMAT_C.VEH_TYP_MINE ,
--VEH_NO_SERIE  =  S_FDSQTT_TESTFORMAT_C.VEH_NO_SERIE ,
VEH_BLVD  =  S_FDSQTT_TESTFORMAT_C.VEH_BLVD ,
VEH_NO_IMMAT  =  S_FDSQTT_TESTFORMAT_C.VEH_NO_IMMAT ,
CTR_DT_LIV  =  S_FDSQTT_TESTFORMAT_C.CTR_DT_LIV ,
NOM_CHAUFFEUR  =  S_FDSQTT_TESTFORMAT_C.NOM_CHAUFFEUR ,
GENRE_CD_TRANSCO  =  S_FDSQTT_TESTFORMAT_C.GENRE_CD_TRANSCO ,
VEH_MTHT_CAT  =  S_FDSQTT_TESTFORMAT_C.VEH_MTHT_CAT ,
VEH_MTHT_OPT  =  S_FDSQTT_TESTFORMAT_C.VEH_MTHT_OPT ,
VEH_PCT_REM  =  S_FDSQTT_TESTFORMAT_C.VEH_PCT_REM ,
VEH_MTHT_ACC  =  S_FDSQTT_TESTFORMAT_C.VEH_MTHT_ACC ,
VEH_MTHT_TRANS  =  S_FDSQTT_TESTFORMAT_C.VEH_MTHT_TRANS ,
VEH_GARN  =  S_FDSQTT_TESTFORMAT_C.VEH_GARN ,
VEH_OPT1  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT1 ,
VEH_OPT2  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT2 ,
VEH_OPT3  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT3 ,
VEH_OPT4  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT4 ,
VEH_OPT5  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT5 ,
VEH_OPT6  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT6 ,
VEH_OPT7  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT7 ,
VEH_OPT8  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT8 ,
VEH_OPT9  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT9 ,
VEH_OPT10  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT10 ,
VEH_OPT11  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT11 ,
VEH_ACC1  =  S_FDSQTT_TESTFORMAT_C.VEH_ACC1 ,
VEH_ACC2  =  S_FDSQTT_TESTFORMAT_C.VEH_ACC2 ,
VEH_ACC3  =  S_FDSQTT_TESTFORMAT_C.VEH_ACC3 ,
VEH_ACC4  =  S_FDSQTT_TESTFORMAT_C.VEH_ACC4 ,
VEH_ACC5  =  S_FDSQTT_TESTFORMAT_C.VEH_ACC5 ,
VEH_TRF1  =  S_FDSQTT_TESTFORMAT_C.VEH_TRF1 ,
VEH_TRF2  =  S_FDSQTT_TESTFORMAT_C.VEH_TRF2 ,
VEH_TRF3  =  S_FDSQTT_TESTFORMAT_C.VEH_TRF3 ,
VEH_TRF4  =  S_FDSQTT_TESTFORMAT_C.VEH_TRF4 ,
PDV_RP_RRDI  =  S_FDSQTT_TESTFORMAT_C.PDV_RP_RRDI ,
PDV_RP_NOM  =  S_FDSQTT_TESTFORMAT_C.PDV_RP_NOM ,
PDV_REPRENEUR_RAISON_SOCIALE  =  S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_RAISON_SOCIALE ,
PDV_REPRENEUR_ADRESSE  =  S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_ADRESSE ,
PDV_REPRENEUR_CODE_POSTAL  =  S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_CODE_POSTAL ,
PDV_REPRENEUR_VILLE  =  S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_VILLE ,
PDV_FT_RRDI  =  S_FDSQTT_TESTFORMAT_C.PDV_FT_RRDI ,
PDV_FT_NOM  =  S_FDSQTT_TESTFORMAT_C.PDV_FT_NOM ,
CD_VENDEUR  =  S_FDSQTT_TESTFORMAT_C.CD_VENDEUR ,
PDV_VD_NOM  =  S_FDSQTT_TESTFORMAT_C.PDV_VD_NOM ,
PDV_FOURNISSEUR_RAISON_SOCIALE  =  S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_RAISON_SOCIALE ,
PDV_FOURNISSEUR_ADRESSE  =  S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_ADRESSE ,
PDV_FOURNISSEUR_CODE_POSTAL  =  S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_CODE_POSTAL ,
PDV_FOURNISSEUR_VILLE  =  S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_VILLE 

                where CTR_NUM_1 = S_FDSQTT_TESTFORMAT_C.CTR_NUM_1
                and   CTR_NUM_2 = S_FDSQTT_TESTFORMAT_C.CTR_NUM_2          ----CTR_NUM, VEH_TYP_MINE, VEH_NO_SERIE, VEH_FAM, CD_PAYS 
               and  VEH_TYP_MINE =  S_FDSQTT_TESTFORMAT_C.VEH_TYP_MINE
                and VEH_NO_SERIE =  S_FDSQTT_TESTFORMAT_C.VEH_NO_SERIE
                and VEH_FAM = S_FDSQTT_TESTFORMAT_C.VEH_FAM
                and CD_PAYS ='ES' ;
                
															--IE_AFFAIRE, VB_VIN, DE_FG_VERSION, FV_CD_FAM_VEHICULE, FV_CDPAYS
					
						V_UPD := V_UPD + 1;

		
						WHEN OTHERS THEN  
							COMMIT;  
							V_ERR := 1;
              
							V_ERROR := SUBSTR('SQLCODE: '||TO_CHAR(SQLCODE)||' -ERROR: '||SQLERRM,1,4000);   
							RES := FPHQAUT.F_WRITE(FILE_ID, 'ALIM_DONNEES_FDSQT2_ES ## Message Erreur pl/sql :' ||SQLERRM);
								
						RETURN V_ERR;
					END;
				END LOOP;

				COMMIT;

     res := FPHQAUT.F_WRITE(file_id, 'ALIM_LSITCVVN Nombre de creations :'||V_INS);
     res := FPHQAUT.F_WRITE(file_id, 'ALIM_LSITCVVN Nombre de mises a jour :'||V_UPD);
     --res := FPHQAUT.F_WRITE(file_id, 'ALIM_LSITCVVN Nombre de suppressions :'||v_SUP);
     res := FPHQAUT.F_WRITE(file_id, '');
     UTL_FILE.FCLOSE(file_id);
     -- 
     v_inserts := V_INS;
     v_updates := V_UPD;
				RETURN V_ERR;
			End;

		/* end; */
   

    
  END ALIM_DONNEES_FDSQT2_ES;








  FUNCTION EXPORT_FDSQT2_ES (NOMLOG      VARCHAR2,
                        P_DATE_TRAI DATE,                 
                       P_PATH    VARCHAR2,
                        P_FILENAME  VARCHAR2) RETURN NUMBER AS
  BEGIN
    
    RETURN NULL;
  END EXPORT_FDSQT2_ES;





  FUNCTION MAIN_FDSQT2_ES (NOMLOG      VARCHAR2,
                              P_DATE_TRAI DATE,
                              P_PATH VARCHAR2,
                              P_FILENAME VARCHAR2) RETURN NUMBER AS
  BEGIN
    
    RETURN NULL;
  END MAIN_FDSQT2_ES;
  
 

END FPHQACT2;   VARCHAR2,
                                  P_DATE_TRAI   DATE,
                                  V_INSERTS     OUT NUMBER,
                       create or replace
PACKAGE BODY FPHQACT2 A

  FUNCTION ALIM_DONNEES_FDSQT2_ES (NOMLOG      VARCHAR2,
                                  P_DATE_TRAI   DATE,
                                  V_INSERTS     OUT NUMBER,
                                  V_UPDATES     OUT NUMBER,
                                  V_ERROR       OUT VARCHAR2) RETURN NUMBER IS
  
  
      P_DATE_SITU          date;
      V_ERR                NUMBER := 0;
      V_INS                NUMBER := 0;
      V_UPD                NUMBER := 0;
      FILE_ID              UTL_FILE.FILE_TYPE;
      RES                  NUMBER := 0;
      V_NOM_TRAIT          VARCHAR2(50) := 'ALIM_DONNEES_FDSQT2_ES';
      V_CODE_PAYS          VARCHAR2(2);
    
    

        CURSOR C_FDSQTT_TESTFORMAT_C IS  /*  TT  */  /* C_FDSQTRFP    FDSQA_FORMA_CHRISTIAN    */   

select
  to_date(Sysdate, 'DD/MM/YYYY') As Date_Traitement,  --Date_de_Traitement
FPHQT90.PY_CD_PAYS  AS   CD_PAYS ,
'EKIP'  AS   CD_SOURCE ,
FPHQT90.ID_RESEAU  AS   RESEAU ,
FPHQT90.IE_AFFAIRE  AS   CTR_NUM_1 ,
FPHQT90.IE_AFFAIRE  AS   CTR_NUM_2 ,
NULL  AS   BUY_BACK_TYPE ,
CASE ROLE_TIERS when 'CLIE' then  FPHQTTI.NIF  else null end CL_SIREN,  -- FPHQTTI.NIF  AS   CL_SIREN ,
case ROLE_TIERS when 'CLIE' then FPHQTTI.NOM else null end   CL_NOM , -- FPHQTTI.NOM  AS   CL_NOM ,
NULL  AS   TVA_CD ,
case ROLE_TIERS when 'CLIE' then FPHQTTI.TYPE_SEGMENT else null end CL_TYP_LIB, -- FPHQTTI.TYPE_SEGMENT  AS   CL_TYP_LIB ,
case ROLE_TIERS when 'CLIE' then  FPHQTTI.CODE_APE else null end  CL_APE_CD, -- FPHQTTI.CODE_APE  AS   CL_APE_CD ,
case ROLE_TIERS when 'CLIE' then FPHQTTI.SECT_ACTIVITE else null end   CL_APE_LIB, --FPHQTTI.SECT_ACTIVITE  AS   CL_APE_LIB ,
case ROLE_TIERS when 'PCLI' then  CONCAT(FPHQTTI.ANC_NO_RUE,concat(' ',FPHQTTI.ANC_NOM_RUE)) else null end CL_ADR_FACT, -- CONCAT(FPHQTTI.ANC_NO_RUE,' ',FPHQTTI.ANC_NOM_RUE) as CL_ADR_FACT, 
case  ROLE_TIERS when 'PCLI' then FPHQTTI.ANC_CODE_POSTAL else null end CL_ADR_CP,  -- FPHQTTI.ANC_CODE_POSTAL  AS   CL_ADR_CP ,
case  ROLE_TIERS when 'PCLI' then FPHQTTI.ANC_LOCALITE  else null end  CL_ADR_VILLE, --FPHQTTI.ANC_LOCALITE  AS   CL_ADR_VILLE ,
NULL  AS   CTR_RETAIL ,
NULL AS   CIVILITE_SIGNATAIRE, --FPHQTCL.CL_IN_IDTITRE (CD avec jointure sur table LIB : FNMVTI0)  AS   CIVILITE_SIGNATAIRE ,
NULL AS   NOM_SIGNATAIRE , --FPHQTCL.CL_RE_NOM1  AS   NOM_SIGNATAIRE ,
NULL AS   PRENOM_SIGNATAIRE , --FPHQTCL.CL_RE_PRNOM  AS   PRENOM_SIGNATAIRE ,
case ROLE_TIERS when 'CLIE' then FPHQTTI.TELEPHONE else null end TEL_CONTACT,  -- FPHQTTI.TELEPHONE  AS   TEL_CONTACT ,
case ROLE_TIERS when 'CLIE' then FPHQTTI.EMAIL else null end  EMAIL_SIGNATAIRE, -- FPHQTTI.EMAIL AS   EMAIL_SIGNATAIRE ,
FPHQT91.DUREE_TOT_I  AS   DUREE_INI ,
FPHQT90.KM_CONTRACTUEL_INI  AS   KM_PIVOT_INI ,
FPHQT90.MT_VR_I  AS   ER_PIVOT_INI ,
FPHQT90.DATE_MEL_FIN  AS   CTR_DT_FIN ,
NULL  AS   CTR_DMIN_B2 ,
NULL  AS   CTR_DMIN_B1 ,
FPHQT91.DUREE_TOT  AS   CTR_DTOT ,
NULL  AS   CTR_DMAX_B1 ,
NULL  AS   CTR_DMAX_B2 , 
 FPHQT90.BORNE_KM_INF_2  AS   CTR_KMIN_B2 ,
 FPHQT90.BORNE_KM_INF_1  AS   CTR_KMIN_B1 ,
 FPHQT90.KM_CONTRACTUEL   AS   CTR_KM_PIVOT ,
FPHQT90.BORNE_KM_SUPP_1  AS   CTR_KMAX_B1 ,
FPHQT90.BORNE_KM_SUPP_2  AS   CTR_KMAX_B2 ,
NULL  AS   CTR_ERMIN_B2 ,
NULL  AS   CTR_ERMIN_B1 ,
FPHQT90.MT_VR  AS   CTR_ER_HT ,
NULL  AS   CTR_ERMAX_B1 ,
NULL  AS   CTR_ERMAX_B2 ,
case VB_FLAG_PERTINENT when 'Y' then  FPHQTVB.VB_KM_REL else null end GIFP_DER_KM,  -- FPHQTVB.VB_KM_REL  AS   GIFP_DER_KM ,
case VB_FLAG_PERTINENT when 'Y' then  FPHQTVB.VB_DT_RELKM  else null end GIFP_DT_DER_KM, ---  FPHQTVB.VB_DT_RELKM  AS   GIFP_DT_DER_KM ,
case VB_FLAG_PERTINENT when 'Y' then FPHQTVB.VB_CD_SRCEVT  else null end  GIFP_ORIG_DER_KM, -- FPHQTVB.VB_CD_SRCEVT  AS   GIFP_ORIG_DER_KM ,
NVL(fph.Fphqtvb.Vb_Km_Rel, '0') * NVL(fph.fphqt90.KM_CONTRACTUEL, '0') / Months_Between(Sysdate, to_date(Fph.Fphqt90.Date_Megd, 'DD/MM/YYYY')) as GIFP_PROJ_KM_FCT,
-- effacer : FPHQT90.(GIFP_DER_KM  / months_between (sysdate, DATE_MEGD) ) * KM_CONTRACTUEL   AS   GIFP_PROJ_KM_FCT ,
CASE CTR_KM_PIVOT WHEN 0 THEN  null
             create or replace
PACKAGE BODY FPHQACT2 AS

  FUNCTION ALIM_DONNEES_FDSQT2_ES (NOMLOG      VARCHAR2,
                                  P_DATE_TRAI   DATE,
                                  V_INSERTS     OUT NUMBER,
                                  V_UPDATES     OUT NUMBER,
                                  V_ERROR       OUT VARCHAR2) RETURN NUMBER IS
  begin
  declare
       P_DATE_SITU          date;
      V_ERR                NUMBER := 0;
      V_INS                NUMBER := 0;
      V_UPD                NUMBER := 0;
      FILE_ID              UTL_FILE.FILE_TYPE;
      RES                  NUMBER := 0;
      V_NOM_TRAIT          VARCHAR2(50) := 'ALIM_DONNEES_FDSQT2_ES';
      V_CODE_PAYS          VARCHAR2(2);
    
      v_ecart_km  NUMBER;
      --v_GIFP_PROJ_KM_FCT  NUMBER;

        CURSOR C_FDSQTT_TESTFORMAT_C IS  -- TT 

select
  to_date(Sysdate, 'DD/MM/YYYY') As Date_Traitement,  --Date_de_Traitement
FPHQT90.PY_CD_PAYS  AS   CD_PAYS ,
'EKIP'  AS   CD_SOURCE ,
FPHQT90.ID_RESEAU  AS   RESEAU ,
FPHQT90.IE_AFFAIRE  AS   CTR_NUM_1 ,
FPHQT90.IE_AFFAIRE  AS   CTR_NUM_2 ,
NULL  AS   BUY_BACK_TYPE ,
CASE ROLE_TIERS when 'CLIE' then  FPHQTTI.NIF  else null end CL_SIREN,  -- FPHQTTI.NIF  AS   CL_SIREN ,
case ROLE_TIERS when 'CLIE' then FPHQTTI.NOM else null end   CL_NOM , -- FPHQTTI.NOM  AS   CL_NOM ,
NULL  AS   TVA_CD ,
case ROLE_TIERS when 'CLIE' then FPHQTTI.TYPE_SEGMENT else null end CL_TYP_LIB, -- FPHQTTI.TYPE_SEGMENT  AS   CL_TYP_LIB ,
case ROLE_TIERS when 'CLIE' then  FPHQTTI.CODE_APE else null end  CL_APE_CD, -- FPHQTTI.CODE_APE  AS   CL_APE_CD ,
case ROLE_TIERS when 'CLIE' then FPHQTTI.SECT_ACTIVITE else null end   CL_APE_LIB, --FPHQTTI.SECT_ACTIVITE  AS   CL_APE_LIB ,
case ROLE_TIERS when 'PCLI' then  CONCAT(FPHQTTI.ANC_NO_RUE,concat(' ',FPHQTTI.ANC_NOM_RUE)) else null end CL_ADR_FACT, -- CONCAT(FPHQTTI.ANC_NO_RUE,' ',FPHQTTI.ANC_NOM_RUE) as CL_ADR_FACT, 
case  ROLE_TIERS when 'PCLI' then FPHQTTI.ANC_CODE_POSTAL else null end CL_ADR_CP,  -- FPHQTTI.ANC_CODE_POSTAL  AS   CL_ADR_CP ,
case  ROLE_TIERS when 'PCLI' then FPHQTTI.ANC_LOCALITE  else null end  CL_ADR_VILLE, --FPHQTTI.ANC_LOCALITE  AS   CL_ADR_VILLE ,
NULL  AS   CTR_RETAIL ,
NULL AS   CIVILITE_SIGNATAIRE, --FPHQTCL.CL_IN_IDTITRE (CD avec jointure sur table LIB : FNMVTI0)  AS   CIVILITE_SIGNATAIRE ,
NULL AS   NOM_SIGNATAIRE , --FPHQTCL.CL_RE_NOM1  AS   NOM_SIGNATAIRE ,
NULL AS   PRENOM_SIGNATAIRE , --FPHQTCL.CL_RE_PRNOM  AS   PRENOM_SIGNATAIRE ,
case ROLE_TIERS when 'CLIE' then FPHQTTI.TELEPHONE else null end TEL_CONTACT,  -- FPHQTTI.TELEPHONE  AS   TEL_CONTACT ,
case ROLE_TIERS when 'CLIE' then FPHQTTI.EMAIL else null end  EMAIL_SIGNATAIRE, -- FPHQTTI.EMAIL AS   EMAIL_SIGNATAIRE ,
FPHQT91.DUREE_TOT_I  AS   DUREE_INI ,
FPHQT90.KM_CONTRACTUEL_INI  AS   KM_PIVOT_INI ,
FPHQT90.MT_VR_I  AS   ER_PIVOT_INI ,
FPHQT90.DATE_MEL_FIN  AS   CTR_DT_FIN ,
NULL  AS   CTR_DMIN_B2 ,
NULL  AS   CTR_DMIN_B1 ,
FPHQT91.DUREE_TOT  AS   CTR_DTOT ,
NULL  AS   CTR_DMAX_B1 ,
NULL  AS   CTR_DMAX_B2 , 
 FPHQT90.BORNE_KM_INF_2  AS   CTR_KMIN_B2 ,
 FPHQT90.BORNE_KM_INF_1  AS   CTR_KMIN_B1 ,
 FPHQT90.KM_CONTRACTUEL   AS   CTR_KM_PIVOT ,
FPHQT90.BORNE_KM_SUPP_1  AS   CTR_KMAX_B1 ,
FPHQT90.BORNE_KM_SUPP_2  AS   CTR_KMAX_B2 ,
NULL  AS   CTR_ERMIN_B2 ,
NULL  AS   CTR_ERMIN_B1 ,
FPHQT90.MT_VR  AS   CTR_ER_HT ,
NULL  AS   CTR_ERMAX_B1 ,
NULL  AS   CTR_ERMAX_B2 ,
case VB_FLAG_PERTINENT when 'Y' then  FPHQTVB.VB_KM_REL else null end GIFP_DER_KM,  -- FPHQTVB.VB_KM_REL  AS   GIFP_DER_KM ,
case VB_FLAG_PERTINENT when 'Y' then  FPHQTVB.VB_DT_RELKM  else null end GIFP_DT_DER_KM, ---  FPHQTVB.VB_DT_RELKM  AS   GIFP_DT_DER_KM ,
case VB_FLAG_PERTINENT when 'Y' then FPHQTVB.VB_CD_SRCEVT  else null end  GIFP_ORIG_DER_KM, -- FPHQTVB.VB_CD_SRCEVT  AS   GIFP_ORIG_DER_KM ,


NVL(Fphqtvb.Vb_Km_Rel, '0') * NVL(fphqt90.KM_CONTRACTUEL, '0') / Months_Between(Sysdate, to_date(Fphqt90.Date_Megd, 'DD/MM/YYYY')) as GIFP_PROJ_KM_FCT,
/*
-- effacer : FPHQT90.(GIFP_DER_KM  / months_between (sysdate, DATE_MEGD) ) * KM_CONTRACTUEL   AS   GIFP_PROJ_KM_FCT ,
-----------------
CASE CTR_KM_PIVOT WHEN 0 THEN  null
                WHEN NULL then null
                else case GIFP_PROJ_KM_FCT when 0 then  null
                                          when null then null
                                          else case (NVL(GIFP_PROJ_KM_FCT,'0') - NVL(CTR_KM_PIVOT,'0')) when 0 then  null
                                                                                                      else (GIFP_PROJ_KM_FCT - CTR_KM_PIVOT) end  end  end  v_ecart_km,     
------------------
"IF H1.CTR_KM_PIVOT = 0 OR H1.CTR_KM_PIVOT IS NULL OR H1.GIFP_PROJ_KM_FCT = 0 OR H1.GIFP_PROJ_KM_FCT IS NULL OR (H1.GIFP_PROJ_KM_FCT - H1.CTR_KM_PIVOT) = 0 THEN
           v_ecart_km :=NULL;
        ELSE
           v_ecart_km := (H1.GIFP_PROJ_KM_FCT - H1.CTR_KM_PIVOT);
        END IF;.  AS   v_ecart_km ,"*/
NULL  AS   CTR_TYP_SOUP ,
NULL  AS   REDEV_KM_EXCED ,
FPHQT91.MT_LOYER_TOT_HT  AS   LOY_MTHT_FIN ,
FPHQT91.MT_HT_ECH + FPHQT91.MT_HT_SERV  AS   LOY_MT_HT ,
FPHQT91.MT_TTC_ECH + FPHQT91.MT_TTC_SERV  AS   LOY_MT_TTC ,
NULL  AS   LOY_FLG_GPF ,
CASE CODE_TYPE_SERVICE_BO WHEN 'MNT' THEN 'OUI'  ELSE 'NON' end  LOY_FLG_MAIN ,  -- FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS 
NULL  AS   LOY_PCT_CEM ,
CASE CODE_TYPE_SERVICE_BO WHEN 'ATR' THEN 'OUI' ELSE 'NON' END LOY_FLG_TR, --  FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   LOY_FLG_TR ,
CASE CODE_TYPE_SERVICE_BO WHEN 'ASP' THEN 'OUI' WHEN 'ASR' THEN 'OUI' WHEN 'AST' then 'OUI' else 'NON' end  LOY_FLG_ASS, -- FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   LOY_FLG_ASS ,
CASE CODE_TYPE_SERVICE_BO WHEN 'KUA' THEN 'OUI' else 'NON' end  LOY_FLG_IP, --FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   LOY_FLG_IP ,
NULL  AS   LOY_FLG_AFD ,
NULL  AS   LOY_FLG_CARBU ,
CASE CODE_TYPE_SERVICE_BO WHEN 'PNE' THEN 'OUI' ELSE 'NON' END FLAG_PNEUS_ETE, --FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   FLAG_PNEUS_ETE ,
CASE CODE_TYPE_SERVICE_BO WHEN 'PNH'THEN 'OUI' ELSE 'NON' END  FLAG_PNEUS_HIVER, --FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   FLAG_PNEUS_HIVER ,
CASE CODE_TYPE_SERVICE_BO WHEN 'PNH' THEN 'OUI' ELSE 'NON' end FLAG_VEHICULE_DE_REMPLACEMENT, --FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   FLAG_VEHICULE_DE_REMPLACEMENT ,
NULL  AS   FLAG_CEM_FLEX ,
case CODE_TYPE_SERVICE_BO when 'PN4' then 'OUI' ELSE 'NON' end FLAG_PNEU_MIXTE, --FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   FLAG_PNEU_MIXTE ,
NULL  AS   FLAG_JOCKEY ,
case CODE_TYPE_SERVICE_BO when 'PAR' then 'OUI' else 'NON' END FLAG_PASS_RESTIT,-- FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   FLAG_PASS_RESTIT ,
FPHQTFV.FV_CD_FAM_VEHICULE  AS   VEH_FAM ,
FPHQTFV.FV_LIB_FAM_VEHICULE  AS   VEH_LIB_LS ,
FPHQT90.CODE_PSA  AS   VEH_LCDV ,
FPHQT90.LIB_COMMERCIAL  AS   VEH_LCDV_LIB ,
NULL  AS   CARROSSERIE ,
NULL  AS   VEH_COUL ,
FPHQT90.CODE_GENRE  AS   VEH_GENRE ,
FPHQT90.ENERGIE  AS   VEH_NRJ ,
FPHQT90.EMISSION_CO2  AS   VEH_CO2 ,
FPHQT90.PUISSANCE  AS   VEH_PUIS_FISC ,
FPHQT90.VIN  AS   VEH_TYP_MINE ,
FPHQT90.VIN  AS   VEH_NO_SERIE ,
NULL AS VEH_BLVD, -------------------------- FPHQT90.CODE_BLVD  AS   VEH_BLVD , ---------------------- A ALIMENTER QUAND L'INFO SERA DISPONIBLE
FPHQT91.IMMATRICULATION  AS   VEH_NO_IMMAT ,
FPHQT90.DATE_LIVRAISON  AS   CTR_DT_LIV ,
case ROLE_TIERS when 'CHAU' then FPHQTTI.NOM else null end NOM_CHAUFFEUR , -- FPHQTTI.NOM  AS   NOM_CHAUFFEUR ,
FPHQT90.CODE_GENRE  AS   GENRE_CD_TRANSCO ,
FPHQT90.MT_CATALOGUE  AS   VEH_MTHT_CAT ,
FPHQT90.MT_OPTIONS  AS   VEH_MTHT_OPT ,
FPHQT90.POURC_REMISE  AS   VEH_PCT_REM ,
FPHQT90.MT_ACCESSOIRES  AS   VEH_MTHT_ACC ,
NULL  AS   VEH_MTHT_TRANS ,
NULL  AS   VEH_GARN ,
NULL  AS   VEH_OPT1 ,
NULL  AS   VEH_OPT2 ,
NULL  AS   VEH_OPT3 ,
NULL  AS   VEH_OPT4 ,
NULL  AS   VEH_OPT5 ,
NULL  AS   VEH_OPT6 ,
NULL  AS   VEH_OPT7 ,
NULL  AS   VEH_OPT8 ,
NULL  AS   VEH_OPT9 ,
NULL  AS   VEH_OPT10 ,
NULL  AS   VEH_OPT11 ,
NULL  AS   VEH_ACC1 ,
NULL  AS   VEH_ACC2 ,
NULL  AS   VEH_ACC3 ,
NULL  AS   VEH_ACC4 ,
NULL  AS   VEH_ACC5 ,
NULL  AS   VEH_TRF1 ,
NULL  AS   VEH_TRF2 ,
NULL  AS   VEH_TRF3 ,
NULL  AS   VEH_TRF4 ,
FPHQT90.RACH_CODE_RRDI  AS   PDV_RP_RRDI ,
case ROLE_TIERS when 'RCLI' then FPHQTTI.NOM  else null end PDV_RP_NOM, -- FPHQTTI.NOM  AS   PDV_RP_NOM ,
case ROLE_TIERS when 'RCLI' then FPHQTTI.NOM else null end  PDV_REPRENEUR_RAISON_SOCIALE, -- FPHQTTI.NOM  AS   PDV_REPRENEUR_RAISON_SOCIALE ,
case  ROLE_TIERS when 'RCLI' then  CONCAT(FPHQTTI.ANC_NO_RUE, concat(' ', FPHQTTI.ANC_NOM_RUE)) else null end PDV_REPRENEUR_ADRESSE,-- CONCAT(FPHQTTI.ANC_NO_RUE, ' ', FPHQTTI.ANC_NOM_RUE)  AS   PDV_REPRENEUR_ADRESSE ,
case ROLE_TIERS when 'RCLI' then  FPHQTTI.ANC_CODE_POSTAL else null end  PDV_REPRENEUR_CODE_POSTAL, -- FPHQTTI.ANC_CODE_POSTAL  AS   PDV_REPRENEUR_CODE_POSTAL ,
case ROLE_TIERS when 'RCLI' then FPHQTTI.ANC_LOCALITE else null end PDV_REPRENEUR_VILLE, -- FPHQTTI.ANC_LOCALITE  AS   PDV_REPRENEUR_VILLE ,
NULL  AS   PDV_FT_RRDI ,
NULL  AS   PDV_FT_NOM ,
NULL  AS   CD_VENDEUR ,
NULL  AS   PDV_VD_NOM ,
NULL  AS   PDV_FOURNISSEUR_RAISON_SOCIALE ,
NULL  AS   PDV_FOURNISSEUR_ADRESSE ,
NULL  AS   PDV_FOURNISSEUR_CODE_POSTAL ,
NULL  AS   PDV_FOURNISSEUR_VILLE 


from FPHQT90, FPHQT91, FPHQT92, FPHQTTI, FPHQTVB, FPHQTDE, FPHQTFV
where FPHQT90.IE_AFFAIRE = FPHQT91.IE_AFFAIRE
AND FPHQT92.IE_AFFAIRE(+) = FPHQT90.IE_AFFAIRE
AND FPHQTTI.IE_AFFAIRE(+) = FPHQT90.IE_AFFAIRE
AND FPHQTVB.VB_VIN(+) = FPHQT90.VIN
AND FPHQT90.IE_AFFAIRE = FPHQTDE.DE_NUM_CONTRAT(+)
AND FPHQTDE.DE_FG_VERSION(+) = 1
AND FPHQTFV.FV_CD_FAM_VEHICULE(+) = FPHQTDE.FV_CD_FAM_VEHICULE
AND FPHQTFV.FV_CDPAYS(+) = FPHQTDE.PY_CD_PAYS;   -- AVANT / AND FPHQTFV.FC_CD_PAYS(+) = FPHQTDE.PY_CD_PAYS;
     /*  ici vous avez mis fdsdwh or votre table temporaire se trouve dans fds */  /* FDSDWH.FDSQTTRFP  */
    
    
    
   BEGIN

				FILE_ID := FPHQAUT.F_OPEN(NOMLOG);
				RES := FPHQAUT.F_WRITE(FILE_ID, 'ALIM_DONNEES_FDSQT2_ES ## Alimentation de la table FPHQT_ES_CTT#');  /* T */  /* ALIM_FDSQTRFP et FDSQTRFP avant  */
				RES := FPHQAUT.F_WRITE(FILE_ID, 'ALIM_DONNEES_FDSQT2_ES ## Flux plusieurs tables   ##'); /*  TT  */
		
		
				FOR S_FDSQTT_TESTFORMAT_C IN C_FDSQTT_TESTFORMAT_C  LOOP  /*  TT IN TT  */   /* S_FDSQA_FORMA_CHRISTIAN */
				

					BEGIN

						IF V_ERR=1 THEN EXIT;   /* exit permet de sortir de la boucle (UNIQUEMENT) */
						END IF;

						IF MOD(V_UPD + V_INS, 100)=0 THEN COMMIT;
						END IF;

           if  (S_FDSQTT_TESTFORMAT_C.CTR_KM_PIVOT = 0) or (S_FDSQTT_TESTFORMAT_C.CTR_KM_PIVOT is null)  then v_ecart_km := null ;
           elsif  (S_FDSQTT_TESTFORMAT_C.GIFP_PROJ_KM_FCT = 0) or (S_FDSQTT_TESTFORMAT_C.GIFP_PROJ_KM_FCT is null) 
                    or ((NVL(S_FDSQTT_TESTFORMAT_C.GIFP_PROJ_KM_FCT,'0') - NVL(S_FDSQTT_TESTFORMAT_C.CTR_KM_PIVOT,'0')) =0 ) then v_ecart_km := null;
          else   v_ecart_km := S_FDSQTT_TESTFORMAT_C.GIFP_PROJ_KM_FCT - S_FDSQTT_TESTFORMAT_C.CTR_KM_PIVOT ;
          end if; 
           
 /*CASE CTR_KM_PIVOT WHEN 0 THEN  null
                WHEN NULL then null
                else case GIFP_PROJ_KM_FCT when 0 then  null
                                          when null then null
                                          else case (NVL(GIFP_PROJ_KM_FCT,'0') - NVL(CTR_KM_PIVOT,'0')) when 0 then  null
                                                                                                 else (GIFP_PROJ_KM_FCT - CTR_KM_PIVOT) end  end  end  v_ecart_km,   
*/     


						INSERT INTO FPHQT_ES_CTT  /* T */
								(                 
Date_Traitement,         
CD_PAYS ,
CD_SOURCE ,
RESEAU ,
CTR_NUM_1 ,
CTR_NUM_2 ,
BUY_BACK_TYPE ,
CL_SIREN ,
CL_NOM ,
TVA_CD ,
CL_TYP_LIB ,
CL_APE_CD ,
CL_APE_LIB ,
CL_ADR_FACT ,
CL_ADR_CP ,
CL_ADR_VILLE ,
CTR_RETAIL ,
CIVILITE_SIGNATAIRE ,
NOM_SIGNATAIRE ,
PRENOM_SIGNATAIRE ,
TEL_CONTACT ,
EMAIL_SIGNATAIRE ,
DUREE_INI ,
KM_PIVOT_INI ,
ER_PIVOT_INI ,
CTR_DT_FIN ,
CTR_DMIN_B2 ,
CTR_DMIN_B1 ,
CTR_DTOT ,
CTR_DMAX_B1 ,
CTR_DMAX_B2 ,
CTR_KMIN_B2 ,
CTR_KMIN_B1 ,
CTR_KM_PIVOT ,
CTR_KMAX_B1 ,
CTR_KMAX_B2 ,
CTR_ERMIN_B2 ,
CTR_ERMIN_B1 ,
CTR_ER_HT ,
CTR_ERMAX_B1 ,
CTR_ERMAX_B2 ,
GIFP_DER_KM ,
GIFP_DT_DER_KM ,
GIFP_ORIG_DER_KM ,
GIFP_PROJ_KM_FCT ,
v_ecart_km , ------------
CTR_TYP_SOUP ,
REDEV_KM_EXCED ,
LOY_MTHT_FIN ,
LOY_MT_HT ,
LOY_MT_TTC ,
LOY_FLG_GPF ,
LOY_FLG_MAIN ,
LOY_PCT_CEM ,
LOY_FLG_TR ,
LOY_FLG_ASS ,
LOY_FLG_IP ,
LOY_FLG_AFD ,
LOY_FLG_CARBU ,
FLAG_PNEUS_ETE ,
FLAG_PNEUS_HIVER ,
FLAG_VEHICULE_DE_REMPLACEMENT ,
FLAG_CEM_FLEX ,
FLAG_PNEU_MIXTE ,
FLAG_JOCKEY ,
FLAG_PASS_RESTIT ,
VEH_FAM ,
VEH_LIB_LS ,
VEH_LCDV ,
VEH_LCDV_LIB ,
CARROSSERIE ,
VEH_COUL ,
VEH_GENRE ,
VEH_NRJ ,
VEH_CO2 ,
VEH_PUIS_FISC ,
VEH_TYP_MINE ,
VEH_NO_SERIE ,
VEH_BLVD ,
VEH_NO_IMMAT ,
CTR_DT_LIV ,
NOM_CHAUFFEUR ,
GENRE_CD_TRANSCO ,
VEH_MTHT_CAT ,
VEH_MTHT_OPT ,
VEH_PCT_REM ,
VEH_MTHT_ACC ,
VEH_MTHT_TRANS ,
VEH_GARN ,
VEH_OPT1 ,
VEH_OPT2 ,
VEH_OPT3 ,
VEH_OPT4 ,
VEH_OPT5 ,
VEH_OPT6 ,
VEH_OPT7 ,
VEH_OPT8 ,
VEH_OPT9 ,
VEH_OPT10 ,
VEH_OPT11 ,
VEH_ACC1 ,
VEH_ACC2 ,
VEH_ACC3 ,
VEH_ACC4 ,
VEH_ACC5 ,
VEH_TRF1 ,
VEH_TRF2 ,
VEH_TRF3 ,
VEH_TRF4 ,
PDV_RP_RRDI ,
PDV_RP_NOM ,
PDV_REPRENEUR_RAISON_SOCIALE ,
PDV_REPRENEUR_ADRESSE ,
PDV_REPRENEUR_CODE_POSTAL ,
PDV_REPRENEUR_VILLE ,
PDV_FT_RRDI ,
PDV_FT_NOM ,
CD_VENDEUR ,
PDV_VD_NOM ,
PDV_FOURNISSEUR_RAISON_SOCIALE ,
PDV_FOURNISSEUR_ADRESSE ,
PDV_FOURNISSEUR_CODE_POSTAL ,
PDV_FOURNISSEUR_VILLE 

								)
						VALUES
								(                /* TT */
                
S_FDSQTT_TESTFORMAT_C.Date_Traitement ,
S_FDSQTT_TESTFORMAT_C.CD_PAYS ,
S_FDSQTT_TESTFORMAT_C.CD_SOURCE ,
S_FDSQTT_TESTFORMAT_C.RESEAU ,
S_FDSQTT_TESTFORMAT_C.CTR_NUM_1 ,
S_FDSQTT_TESTFORMAT_C.CTR_NUM_2 ,
S_FDSQTT_TESTFORMAT_C.BUY_BACK_TYPE ,
S_FDSQTT_TESTFORMAT_C.CL_SIREN ,
S_FDSQTT_TESTFORMAT_C.CL_NOM ,
S_FDSQTT_TESTFORMAT_C.TVA_CD ,
S_FDSQTT_TESTFORMAT_C.CL_TYP_LIB ,
S_FDSQTT_TESTFORMAT_C.CL_APE_CD ,
S_FDSQTT_TESTFORMAT_C.CL_APE_LIB ,
S_FDSQTT_TESTFORMAT_C.CL_ADR_FACT ,
S_FDSQTT_TESTFORMAT_C.CL_ADR_CP ,
S_FDSQTT_TESTFORMAT_C.CL_ADR_VILLE ,
S_FDSQTT_TESTFORMAT_C.CTR_RETAIL ,
S_FDSQTT_TESTFORMAT_C.CIVILITE_SIGNATAIRE ,
S_FDSQTT_TESTFORMAT_C.NOM_SIGNATAIRE ,
S_FDSQTT_TESTFORMAT_C.PRENOM_SIGNATAIRE ,
S_FDSQTT_TESTFORMAT_C.TEL_CONTACT ,
S_FDSQTT_TESTFORMAT_C.EMAIL_SIGNATAIRE ,
S_FDSQTT_TESTFORMAT_C.DUREE_INI ,
S_FDSQTT_TESTFORMAT_C.KM_PIVOT_INI ,
S_FDSQTT_TESTFORMAT_C.ER_PIVOT_INI ,
S_FDSQTT_TESTFORMAT_C.CTR_DT_FIN ,
S_FDSQTT_TESTFORMAT_C.CTR_DMIN_B2 ,
S_FDSQTT_TESTFORMAT_C.CTR_DMIN_B1 ,
S_FDSQTT_TESTFORMAT_C.CTR_DTOT ,
S_FDSQTT_TESTFORMAT_C.CTR_DMAX_B1 ,
S_FDSQTT_TESTFORMAT_C.CTR_DMAX_B2 ,
S_FDSQTT_TESTFORMAT_C.CTR_KMIN_B2 ,
S_FDSQTT_TESTFORMAT_C.CTR_KMIN_B1 ,
S_FDSQTT_TESTFORMAT_C.CTR_KM_PIVOT ,
S_FDSQTT_TESTFORMAT_C.CTR_KMAX_B1 ,
S_FDSQTT_TESTFORMAT_C.CTR_KMAX_B2 ,
S_FDSQTT_TESTFORMAT_C.CTR_ERMIN_B2 ,
S_FDSQTT_TESTFORMAT_C.CTR_ERMIN_B1 ,
S_FDSQTT_TESTFORMAT_C.CTR_ER_HT ,
S_FDSQTT_TESTFORMAT_C.CTR_ERMAX_B1 ,
S_FDSQTT_TESTFORMAT_C.CTR_ERMAX_B2 ,
S_FDSQTT_TESTFORMAT_C.GIFP_DER_KM ,
S_FDSQTT_TESTFORMAT_C.GIFP_DT_DER_KM ,
S_FDSQTT_TESTFORMAT_C.GIFP_ORIG_DER_KM ,
S_FDSQTT_TESTFORMAT_C.GIFP_PROJ_KM_FCT ,
v_ecart_km , --------------------
S_FDSQTT_TESTFORMAT_C.CTR_TYP_SOUP ,
S_FDSQTT_TESTFORMAT_C.REDEV_KM_EXCED ,
S_FDSQTT_TESTFORMAT_C.LOY_MTHT_FIN ,
S_FDSQTT_TESTFORMAT_C.LOY_MT_HT ,
S_FDSQTT_TESTFORMAT_C.LOY_MT_TTC ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_GPF ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_MAIN ,
S_FDSQTT_TESTFORMAT_C.LOY_PCT_CEM ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_TR ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_ASS ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_IP ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_AFD ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_CARBU ,
S_FDSQTT_TESTFORMAT_C.FLAG_PNEUS_ETE ,
S_FDSQTT_TESTFORMAT_C.FLAG_PNEUS_HIVER ,
S_FDSQTT_TESTFORMAT_C.FLAG_VEHICULE_DE_REMPLACEMENT ,
S_FDSQTT_TESTFORMAT_C.FLAG_CEM_FLEX ,
S_FDSQTT_TESTFORMAT_C.FLAG_PNEU_MIXTE ,
S_FDSQTT_TESTFORMAT_C.FLAG_JOCKEY ,
S_FDSQTT_TESTFORMAT_C.FLAG_PASS_RESTIT ,
S_FDSQTT_TESTFORMAT_C.VEH_FAM ,
S_FDSQTT_TESTFORMAT_C.VEH_LIB_LS ,
S_FDSQTT_TESTFORMAT_C.VEH_LCDV ,
S_FDSQTT_TESTFORMAT_C.VEH_LCDV_LIB ,
S_FDSQTT_TESTFORMAT_C.CARROSSERIE ,
S_FDSQTT_TESTFORMAT_C.VEH_COUL ,
S_FDSQTT_TESTFORMAT_C.VEH_GENRE ,
S_FDSQTT_TESTFORMAT_C.VEH_NRJ ,
S_FDSQTT_TESTFORMAT_C.VEH_CO2 ,
S_FDSQTT_TESTFORMAT_C.VEH_PUIS_FISC ,
S_FDSQTT_TESTFORMAT_C.VEH_TYP_MINE ,
S_FDSQTT_TESTFORMAT_C.VEH_NO_SERIE ,
S_FDSQTT_TESTFORMAT_C.VEH_BLVD ,
S_FDSQTT_TESTFORMAT_C.VEH_NO_IMMAT ,
S_FDSQTT_TESTFORMAT_C.CTR_DT_LIV ,
S_FDSQTT_TESTFORMAT_C.NOM_CHAUFFEUR ,
S_FDSQTT_TESTFORMAT_C.GENRE_CD_TRANSCO ,
S_FDSQTT_TESTFORMAT_C.VEH_MTHT_CAT ,
S_FDSQTT_TESTFORMAT_C.VEH_MTHT_OPT ,
S_FDSQTT_TESTFORMAT_C.VEH_PCT_REM ,
S_FDSQTT_TESTFORMAT_C.VEH_MTHT_ACC ,
S_FDSQTT_TESTFORMAT_C.VEH_MTHT_TRANS ,
S_FDSQTT_TESTFORMAT_C.VEH_GARN ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT1 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT2 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT3 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT4 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT5 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT6 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT7 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT8 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT9 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT10 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT11 ,
S_FDSQTT_TESTFORMAT_C.VEH_ACC1 ,
S_FDSQTT_TESTFORMAT_C.VEH_ACC2 ,
S_FDSQTT_TESTFORMAT_C.VEH_ACC3 ,
S_FDSQTT_TESTFORMAT_C.VEH_ACC4 ,
S_FDSQTT_TESTFORMAT_C.VEH_ACC5 ,
S_FDSQTT_TESTFORMAT_C.VEH_TRF1 ,
S_FDSQTT_TESTFORMAT_C.VEH_TRF2 ,
S_FDSQTT_TESTFORMAT_C.VEH_TRF3 ,
S_FDSQTT_TESTFORMAT_C.VEH_TRF4 ,
S_FDSQTT_TESTFORMAT_C.PDV_RP_RRDI ,
S_FDSQTT_TESTFORMAT_C.PDV_RP_NOM ,
S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_RAISON_SOCIALE ,
S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_ADRESSE ,
S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_CODE_POSTAL ,
S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_VILLE ,
S_FDSQTT_TESTFORMAT_C.PDV_FT_RRDI ,
S_FDSQTT_TESTFORMAT_C.PDV_FT_NOM ,
S_FDSQTT_TESTFORMAT_C.CD_VENDEUR ,
S_FDSQTT_TESTFORMAT_C.PDV_VD_NOM ,
S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_RAISON_SOCIALE ,
S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_ADRESSE ,
S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_CODE_POSTAL ,
S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_VILLE 								
								);

						V_INS := V_INS + 1;

					
					EXCEPTION

						WHEN DUP_VAL_ON_INDEX THEN
						UPDATE  FPH.FPHQT_ES_CTT     /* T */
						SET     /* TT */
Date_Traitement  =  S_FDSQTT_TESTFORMAT_C.Date_Traitement ,
--CD_PAYS  =  S_FDSQTT_TESTFORMAT_C.CD_PAYS ,
CD_SOURCE  =  S_FDSQTT_TESTFORMAT_C.CD_SOURCE ,
RESEAU  =  S_FDSQTT_TESTFORMAT_C.RESEAU ,
--CTR_NUM_1  =  S_FDSQTT_TESTFORMAT_C.CTR_NUM_1 ,
--CTR_NUM_2  =  S_FDSQTT_TESTFORMAT_C.CTR_NUM_2 ,
BUY_BACK_TYPE  =  S_FDSQTT_TESTFORMAT_C.BUY_BACK_TYPE ,
CL_SIREN  =  S_FDSQTT_TESTFORMAT_C.CL_SIREN ,
CL_NOM  =  S_FDSQTT_TESTFORMAT_C.CL_NOM ,
TVA_CD  =  S_FDSQTT_TESTFORMAT_C.TVA_CD ,
CL_TYP_LIB  =  S_FDSQTT_TESTFORMAT_C.CL_TYP_LIB ,
CL_APE_CD  =  S_FDSQTT_TESTFORMAT_C.CL_APE_CD ,
CL_APE_LIB  =  S_FDSQTT_TESTFORMAT_C.CL_APE_LIB ,
CL_ADR_FACT  =  S_FDSQTT_TESTFORMAT_C.CL_ADR_FACT ,
CL_ADR_CP  =  S_FDSQTT_TESTFORMAT_C.CL_ADR_CP ,
CL_ADR_VILLE  =  S_FDSQTT_TESTFORMAT_C.CL_ADR_VILLE ,
CTR_RETAIL  =  S_FDSQTT_TESTFORMAT_C.CTR_RETAIL ,
CIVILITE_SIGNATAIRE  =  S_FDSQTT_TESTFORMAT_C.CIVILITE_SIGNATAIRE ,
NOM_SIGNATAIRE  =  S_FDSQTT_TESTFORMAT_C.NOM_SIGNATAIRE ,
PRENOM_SIGNATAIRE  =  S_FDSQTT_TESTFORMAT_C.PRENOM_SIGNATAIRE ,
TEL_CONTACT  =  S_FDSQTT_TESTFORMAT_C.TEL_CONTACT ,
EMAIL_SIGNATAIRE  =  S_FDSQTT_TESTFORMAT_C.EMAIL_SIGNATAIRE ,
DUREE_INI  =  S_FDSQTT_TESTFORMAT_C.DUREE_INI ,
KM_PIVOT_INI  =  S_FDSQTT_TESTFORMAT_C.KM_PIVOT_INI ,
ER_PIVOT_INI  =  S_FDSQTT_TESTFORMAT_C.ER_PIVOT_INI ,
CTR_DT_FIN  =  S_FDSQTT_TESTFORMAT_C.CTR_DT_FIN ,
CTR_DMIN_B2  =  S_FDSQTT_TESTFORMAT_C.CTR_DMIN_B2 ,
CTR_DMIN_B1  =  S_FDSQTT_TESTFORMAT_C.CTR_DMIN_B1 ,
CTR_DTOT  =  S_FDSQTT_TESTFORMAT_C.CTR_DTOT ,
CTR_DMAX_B1  =  S_FDSQTT_TESTFORMAT_C.CTR_DMAX_B1 ,
CTR_DMAX_B2  =  S_FDSQTT_TESTFORMAT_C.CTR_DMAX_B2 ,
CTR_KMIN_B2  =  S_FDSQTT_TESTFORMAT_C.CTR_KMIN_B2 ,
CTR_KMIN_B1  =  S_FDSQTT_TESTFORMAT_C.CTR_KMIN_B1 ,
CTR_KM_PIVOT  =  S_FDSQTT_TESTFORMAT_C.CTR_KM_PIVOT ,
CTR_KMAX_B1  =  S_FDSQTT_TESTFORMAT_C.CTR_KMAX_B1 ,
CTR_KMAX_B2  =  S_FDSQTT_TESTFORMAT_C.CTR_KMAX_B2 ,
CTR_ERMIN_B2  =  S_FDSQTT_TESTFORMAT_C.CTR_ERMIN_B2 ,
CTR_ERMIN_B1  =  S_FDSQTT_TESTFORMAT_C.CTR_ERMIN_B1 ,
CTR_ER_HT  =  S_FDSQTT_TESTFORMAT_C.CTR_ER_HT ,
CTR_ERMAX_B1  =  S_FDSQTT_TESTFORMAT_C.CTR_ERMAX_B1 ,
CTR_ERMAX_B2  =  S_FDSQTT_TESTFORMAT_C.CTR_ERMAX_B2 ,
GIFP_DER_KM  =  S_FDSQTT_TESTFORMAT_C.GIFP_DER_KM ,
GIFP_DT_DER_KM  =  S_FDSQTT_TESTFORMAT_C.GIFP_DT_DER_KM ,
GIFP_ORIG_DER_KM  =  S_FDSQTT_TESTFORMAT_C.GIFP_ORIG_DER_KM ,
GIFP_PROJ_KM_FCT  =  S_FDSQTT_TESTFORMAT_C.GIFP_PROJ_KM_FCT ,
v_ecart_km  =  v_ecart_km ,
CTR_TYP_SOUP  =  S_FDSQTT_TESTFORMAT_C.CTR_TYP_SOUP ,
REDEV_KM_EXCED  =  S_FDSQTT_TESTFORMAT_C.REDEV_KM_EXCED ,
LOY_MTHT_FIN  =  S_FDSQTT_TESTFORMAT_C.LOY_MTHT_FIN ,
LOY_MT_HT  =  S_FDSQTT_TESTFORMAT_C.LOY_MT_HT ,
LOY_MT_TTC  =  S_FDSQTT_TESTFORMAT_C.LOY_MT_TTC ,
LOY_FLG_GPF  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_GPF ,
LOY_FLG_MAIN  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_MAIN ,
LOY_PCT_CEM  =  S_FDSQTT_TESTFORMAT_C.LOY_PCT_CEM ,
LOY_FLG_TR  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_TR ,
LOY_FLG_ASS  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_ASS ,
LOY_FLG_IP  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_IP ,
LOY_FLG_AFD  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_AFD ,
LOY_FLG_CARBU  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_CARBU ,
FLAG_PNEUS_ETE  =  S_FDSQTT_TESTFORMAT_C.FLAG_PNEUS_ETE ,
FLAG_PNEUS_HIVER  =  S_FDSQTT_TESTFORMAT_C.FLAG_PNEUS_HIVER ,
FLAG_VEHICULE_DE_REMPLACEMENT  =  S_FDSQTT_TESTFORMAT_C.FLAG_VEHICULE_DE_REMPLACEMENT ,
FLAG_CEM_FLEX  =  S_FDSQTT_TESTFORMAT_C.FLAG_CEM_FLEX ,
FLAG_PNEU_MIXTE  =  S_FDSQTT_TESTFORMAT_C.FLAG_PNEU_MIXTE ,
FLAG_JOCKEY  =  S_FDSQTT_TESTFORMAT_C.FLAG_JOCKEY ,
FLAG_PASS_RESTIT  =  S_FDSQTT_TESTFORMAT_C.FLAG_PASS_RESTIT ,
--VEH_FAM  =  S_FDSQTT_TESTFORMAT_C.VEH_FAM ,
VEH_LIB_LS  =  S_FDSQTT_TESTFORMAT_C.VEH_LIB_LS ,
VEH_LCDV  =  S_FDSQTT_TESTFORMAT_C.VEH_LCDV ,
VEH_LCDV_LIB  =  S_FDSQTT_TESTFORMAT_C.VEH_LCDV_LIB ,
CARROSSERIE  =  S_FDSQTT_TESTFORMAT_C.CARROSSERIE ,
VEH_COUL  =  S_FDSQTT_TESTFORMAT_C.VEH_COUL ,
VEH_GENRE  =  S_FDSQTT_TESTFORMAT_C.VEH_GENRE ,
VEH_NRJ  =  S_FDSQTT_TESTFORMAT_C.VEH_NRJ ,
VEH_CO2  =  S_FDSQTT_TESTFORMAT_C.VEH_CO2 ,
VEH_PUIS_FISC  =  S_FDSQTT_TESTFORMAT_C.VEH_PUIS_FISC ,
--VEH_TYP_MINE  =  S_FDSQTT_TESTFORMAT_C.VEH_TYP_MINE ,
--VEH_NO_SERIE  =  S_FDSQTT_TESTFORMAT_C.VEH_NO_SERIE ,
VEH_BLVD  =  S_FDSQTT_TESTFORMAT_C.VEH_BLVD ,
VEH_NO_IMMAT  =  S_FDSQTT_TESTFORMAT_C.VEH_NO_IMMAT ,
CTR_DT_LIV  =  S_FDSQTT_TESTFORMAT_C.CTR_DT_LIV ,
NOM_CHAUFFEUR  =  S_FDSQTT_TESTFORMAT_C.NOM_CHAUFFEUR ,
GENRE_CD_TRANSCO  =  S_FDSQTT_TESTFORMAT_C.GENRE_CD_TRANSCO ,
VEH_MTHT_CAT  =  S_FDSQTT_TESTFORMAT_C.VEH_MTHT_CAT ,
VEH_MTHT_OPT  =  S_FDSQTT_TESTFORMAT_C.VEH_MTHT_OPT ,
VEH_PCT_REM  =  S_FDSQTT_TESTFORMAT_C.VEH_PCT_REM ,
VEH_MTHT_ACC  =  S_FDSQTT_TESTFORMAT_C.VEH_MTHT_ACC ,
VEH_MTHT_TRANS  =  S_FDSQTT_TESTFORMAT_C.VEH_MTHT_TRANS ,
VEH_GARN  =  S_FDSQTT_TESTFORMAT_C.VEH_GARN ,
VEH_OPT1  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT1 ,
VEH_OPT2  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT2 ,
VEH_OPT3  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT3 ,
VEH_OPT4  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT4 ,
VEH_OPT5  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT5 ,
VEH_OPT6  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT6 ,
VEH_OPT7  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT7 ,
VEH_OPT8  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT8 ,
VEH_OPT9  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT9 ,
VEH_OPT10  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT10 ,
VEH_OPT11  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT11 ,
VEH_ACC1  =  S_FDSQTT_TESTFORMAT_C.VEH_ACC1 ,
VEH_ACC2  =  S_FDSQTT_TESTFORMAT_C.VEH_ACC2 ,
VEH_ACC3  =  S_FDSQTT_TESTFORMAT_C.VEH_ACC3 ,
VEH_ACC4  =  S_FDSQTT_TESTFORMAT_C.VEH_ACC4 ,
VEH_ACC5  =  S_FDSQTT_TESTFORMAT_C.VEH_ACC5 ,
VEH_TRF1  =  S_FDSQTT_TESTFORMAT_C.VEH_TRF1 ,
VEH_TRF2  =  S_FDSQTT_TESTFORMAT_C.VEH_TRF2 ,
VEH_TRF3  =  S_FDSQTT_TESTFORMAT_C.VEH_TRF3 ,
VEH_TRF4  =  S_FDSQTT_TESTFORMAT_C.VEH_TRF4 ,
PDV_RP_RRDI  =  S_FDSQTT_TESTFORMAT_C.PDV_RP_RRDI ,
PDV_RP_NOM  =  S_FDSQTT_TESTFORMAT_C.PDV_RP_NOM ,
PDV_REPRENEUR_RAISON_SOCIALE  =  S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_RAISON_SOCIALE ,
PDV_REPRENEUR_ADRESSE  =  S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_ADRESSE ,
PDV_REPRENEUR_CODE_POSTAL  =  S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_CODE_POSTAL ,
PDV_REPRENEUR_VILLE  =  S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_VILLE ,
PDV_FT_RRDI  =  S_FDSQTT_TESTFORMAT_C.PDV_FT_RRDI ,
PDV_FT_NOM  =  S_FDSQTT_TESTFORMAT_C.PDV_FT_NOM ,
CD_VENDEUR  =  S_FDSQTT_TESTFORMAT_C.CD_VENDEUR ,
PDV_VD_NOM  =  S_FDSQTT_TESTFORMAT_C.PDV_VD_NOM ,
PDV_FOURNISSEUR_RAISON_SOCIALE  =  S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_RAISON_SOCIALE ,
PDV_FOURNISSEUR_ADRESSE  =  S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_ADRESSE ,
PDV_FOURNISSEUR_CODE_POSTAL  =  S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_CODE_POSTAL ,
PDV_FOURNISSEUR_VILLE  =  S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_VILLE 

                where CTR_NUM_1 = S_FDSQTT_TESTFORMAT_C.CTR_NUM_1
                and   CTR_NUM_2 = S_FDSQTT_TESTFORMAT_C.CTR_NUM_2          ----CTR_NUM, VEH_TYP_MINE, VEH_NO_SERIE, VEH_FAM, CD_PAYS 
               and  VEH_TYP_MINE =  S_FDSQTT_TESTFORMAT_C.VEH_TYP_MINE
                and VEH_NO_SERIE =  S_FDSQTT_TESTFORMAT_C.VEH_NO_SERIE
                and VEH_FAM = S_FDSQTT_TESTFORMAT_C.VEH_FAM
                and CD_PAYS ='ES' ;
                
															--IE_AFFAIRE, VB_VIN, DE_FG_VERSION, FV_CD_FAM_VEHICULE, FV_CDPAYS
					
						V_UPD := V_UPD + 1;

		
						WHEN OTHERS THEN  
							COMMIT;  
							V_ERR := 1;
              
							V_ERROR := SUBSTR('SQLCODE: '||TO_CHAR(SQLCODE)||' -ERROR: '||SQLERRM,1,4000);   
							RES := FPHQAUT.F_WRITE(FILE_ID, 'ALIM_DONNEES_FDSQT2_ES ## Message Erreur pl/sql :' ||SQLERRM);
								
						RETURN V_ERR;
					END;
				END LOOP;

				COMMIT;

     res := FPHQAUT.F_WRITE(file_id, 'ALIM_LSITCVVN Nombre de creations :'||V_INS);
     res := FPHQAUT.F_WRITE(file_id, 'ALIM_LSITCVVN Nombre de mises a jour :'||V_UPD);
     --res := FPHQAUT.F_WRITE(file_id, 'ALIM_LSITCVVN Nombre de suppressions :'||v_SUP);
     res := FPHQAUT.F_WRITE(file_id, '');
     UTL_FILE.FCLOSE(file_id);
     -- 
     v_inserts := V_INS;
     v_updates := V_UPD;
				RETURN V_ERR;
			End;

		/* end; */
   

    
  END ALIM_DONNEES_FDSQT2_ES;








  FUNCTION EXPORT_FDSQT2_ES (NOMLOG      VARCHAR2,
                        P_DATE_TRAI DATE,                 
                       P_PATH    VARCHAR2,
                        P_FILENAME  VARCHAR2) RETURN NUMBER AS
  BEGIN
    
    RETURN NULL;
  END EXPORT_FDSQT2_ES;





  FUNCTION MAIN_FDSQT2_ES (NOMLOG      VARCHAR2,
                              P_DATE_TRAI DATE,
                              P_PATH VARCHAR2,
                              P_FILENAME VARCHAR2) RETURN NUMBER AS
  BEGIN
    
    RETURN NULL;
  END MAIN_FDSQT2_ES;
  
 

END FPHQACT2;   WHEN NULL then null
                else case GIFP_PROJ_KM_FCT when 0 then  null
                                          when null then null
                                          else case (NVL(GIFP_PROJ_KM_FCT,'0') - NVL(CTR_KM_PIVOT,'0')) when 0 then  null
                                                                                                      else (GIFP_PROJ_KM_FCT - CTR_KM_PIVOT) end  end  end  v_ecart_km,     
/*"IF H1.CTR_KM_PIVOT = 0 OR H1.CTR_KM_PIVOT IS NULL OR H1.GIFP_PROJ_KM_FCT = 0 OR H1.GIFP_PROJ_KM_FCT IS NULL OR (H1.GIFP_PROJ_KM_FCT - H1.CTR_KM_PIVOT) = 0 THEN
           v_ecart_km :=NULL;
        ELSE
           v_ecart_km := (H1.GIFP_PROJ_KM_FCT - H1.CTR_KM_PIVOT);
        END IF;.  AS   v_ecart_km ,"*/
NULL  AS   CTR_TYP_SOUP ,
NULL  AS   REDEV_KM_EXCED ,
FPHQT91.MT_LOYER_TOT_HT  AS   LOY_MTHT_FIN ,
FPHQT91.MT_HT_ECH + FPHQT91.MT_HT_SERV  AS   LOY_MT_HT ,
FPHQT91.MT_TTC_ECH + FPHQT91.MT_TTC_SERV  AS   LOY_MT_TTC ,
NULL  AS   LOY_FLG_GPF ,
CASE CODE_TYPE_SERVICE_BO WHEN 'MNT' THEN 'OUI'  ELSE 'NON' end  LOY_FLG_MAIN ,  -- FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS 
NULL  AS   LOY_PCT_CEM ,
CASE CODE_TYPE_SERVICE_BO WHEN 'ATR' THEN 'OUI' ELSE 'NON' END LOY_FLG_TR, --  FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   LOY_FLG_TR ,
CASE CODE_TYPE_SERVICE_BO WHEN 'ASP' THEN 'OUI' WHEN 'ASR' THEN 'OUI' WHEN 'AST' then 'OUI' else 'NON' end  LOY_FLG_ASS, -- FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   LOY_FLG_ASS ,
CASE CODE_TYPE_SERVICE_BO WHEN 'KUA' THEN 'OUI' else 'NON' end  LOY_FLG_IP, --FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   LOY_FLG_IP ,
NULL  AS   LOY_FLG_AFD ,
NULL  AS   LOY_FLG_CARBU ,
CASE CODE_TYPE_SERVICE_BO WHEN 'PNE' THEN 'OUI' ELSE 'NON' END FLAG_PNEUS_ETE, --FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   FLAG_PNEUS_ETE ,
CASE CODE_TYPE_SERVICE_BO WHEN 'PNH'THEN 'OUI' ELSE 'NON' END  FLAG_PNEUS_HIVER, --FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   FLAG_PNEUS_HIVER ,
CASE CODE_TYPE_SERVICE_BO WHEN 'PNH' THEN 'OUI' ELSE 'NON' end FLAG_VEHICULE_DE_REMPLACEMENT, --FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   FLAG_VEHICULE_DE_REMPLACEMENT ,
NULL  AS   FLAG_CEM_FLEX ,
case CODE_TYPE_SERVICE_BO when 'PN4' then 'OUI' ELSE 'NON' end FLAG_PNEU_MIXTE, --FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   FLAG_PNEU_MIXTE ,
NULL  AS   FLAG_JOCKEY ,
case CODE_TYPE_SERVICE_BO when 'PAR' then 'OUI' else 'NON' END FLAG_PASS_RESTIT,-- FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   FLAG_PASS_RESTIT ,
FPHQTFV.FV_CD_FAM_VEHICULE  AS   VEH_FAM ,
FPHQTFV.FV_LIB_FAM_VEHICULE  AS   VEH_LIB_LS ,
FPHQT90.CODE_PSA  AS   VEH_LCDV ,
FPHQT90.LIB_COMMERCIAL  AS   VEH_LCDV_LIB ,
NULL  AS   CARROSSERIE ,
NULL  AS   VEH_COUL ,
FPHQT90.CODE_GENRE  AS   VEH_GENRE ,
FPHQT90.ENERGIE  AS   VEH_NRJ ,
FPHQT90.EMISSION_CO2  AS   VEH_CO2 ,
FPHQT90.PUISSANCE  AS   VEH_PUIS_FISC ,
FPHQT90.VIN  AS   VEH_TYP_MINE ,
FPHQT90.VIN  AS   VEH_NO_SERIE ,
FPHQT90.CODE_BLVD  AS   VEH_BLVD ,
FPHQT91.IMMATRICULATION  AS   VEH_NO_IMMAT ,
FPHQT90.DATE_LIVRAISON  AS   CTR_DT_LIV ,
case ROLE_TIERS when 'CHAU' then FPHQTTI.NOM else null end NOM_CHAUFFEUR , -- FPHQTTI.NOM  AS   NOM_CHAUFFEUR ,
FPHQT90.CODE_GENRE  AS   GENRE_CD_TRANSCO ,
FPHQT90.MT_CATALOGUE  AS   VEH_MTHT_CAT ,
FPHQT90.MT_OPTIONS  AS   VEH_MTHT_OPT ,
FPHQT90.POURC_REMISE  AS   VEH_PCT_REM ,
FPHQT90.MT_ACCESSOIRES  AS   VEH_MTHT_ACC ,
NULL  AS   VEH_MTHT_TRANS ,
NULL  AS   VEH_GARN ,
NULL  AS   VEH_OPT1 ,
NULL  AS   VEH_OPT2 ,
NULL  AS   VEH_OPT3 ,
NULL  AS   VEH_OPT4 ,
NULL  AS   VEH_OPT5 ,
NULL  AS   VEH_OPT6 ,
NULL  AS   VEH_OPT7 ,
NULL  AS   VEH_OPT8 ,
NULL  AS   VEH_OPT9 ,
NULL  AS   VEH_OPT10 ,
NULL  AS   VEH_OPT11 ,
NULL  AS   VEH_ACC1 ,
NULL  AS   VEH_ACC2 ,
NULL  AS   VEH_ACC3 ,
NULL  AS   VEH_ACC4 ,
NULL  AS   VEH_ACC5 ,
NULL  AS   VEH_TRF1 ,
NULL  AS   VEH_TRF2 ,
NULL  AS   VEH_TRF3 ,
NULL  AS   VEH_TRF4 ,
FPHQT90.RACH_CODE_RRDI  AS   PDV_RP_RRDI ,
case ROLE_TIERS when 'RCLI' then FPHQTTI.NOM  else null end PDV_RP_NOM, -- FPHQTTI.NOM  AS   PDV_RP_NOM ,
case ROLE_TIERS when 'RCLI' then FPHQTTI.NOM else null end  PDV_REPRENEUR_RAISON_SOCIALE, -- FPHQTTI.NOM  AS   PDV_REPRENEUR_RAISON_SOCIALE ,
case  ROLE_TIERS when 'RCLI' then  CONCAT(FPHQTTI.ANC_NO_RUE, concat(' ', FPHQTTI.ANC_NOM_RUE)) else null end PDV_REPRENEUR_ADRESSE,-- CONCAT(FPHQTTI.ANC_NO_RUE, ' ', FPHQTTI.ANC_NOM_RUE)  AS   PDV_REPRENEUR_ADRESSE ,
case ROLE_TIERS when 'RCLI' then  FPHQTTI.ANC_CODE_POSTAL else null end  PDV_REPRENEUR_CODE_POSTAL, -- FPHQTTI.ANC_CODE_POSTAL  AS   PDV_REPRENEUR_CODE_POSTAL ,
case ROLE_TIERS when 'RCLI' then FPHQTTI.ANC_LOCALITE else null end PDV_REPRENEUR_VILLE, -- FPHQTTI.ANC_LOCALITE  AS   PDV_REPRENEUR_VILLE ,
NULL  AS   PDV_FT_RRDI ,
NULL  AS   PDV_FT_NOM ,
NULL  AS   CD_VENDEUR ,
NULL  AS   PDV_VD_NOM ,
NULL  AS   PDV_FOURNISSEUR_RAISON_SOCIALE ,
NULL  AS   PDV_FOURNISSEUR_ADRESSE ,
NULL  AS   PDV_FOURNISSEUR_CODE_POSTAL ,
NULL  AS   PDV_FOURNISSEUR_VILLE 


from FPHQT90, FPHQT91, FPHQT92, FPHQTTI, FPHQTVB, FPHQTDE, FPHQTFV
where FPHQT90.IE_AFFAIRE = FPHQT91.IE_AFFAIRE
AND FPHQT92.IE_AFFAIRE(+) = FPHQT90.IE_AFFAIRE
AND FPHQTTI.IE_AFFAIRE(+) = FPHQT90.IE_AFFAIRE
AND FPHQTVB.VB_VIN(+) = FPHQT90.VIN
AND FPHQT90.IE_AFFAIRE = FPHQTDE.DE_NUM_CONTRAT(+)
AND FPHQTDE.DE_FG_VERSION(+) = 1
AND FPHQTFV.FV_CD_FAM_VEHICULE(+) = FPHQTDE.FV_CD_FAM_VEHICULE
AND FPHQTFV.FV_CDPAYS(+) = FPHQTDE.PY_CD_PAYS;   -- AVANT / AND FPHQTFV.FC_CD_PAYS(+) = FPHQTDE.PY_CD_PAYS;
     /*  ici vous avez mis fdsdwh or votre table temporaire se trouve dans fds */  /* FDSDWH.FDSQTTRFP  */
    
    
    
   BEGIN

				FILE_ID := FPHQAUT.F_OPEN(NOMLOG);
				RES := FPHQAUT.F_WRITE(FILE_ID, 'ALIM_DONNEES_FDSQT2_ES ## Alimentation de la table FPHQT_ES_CTT#');  /* T */  /* ALIM_FDSQTRFP et FDSQTRFP avant  */
				RES := FPHQAUT.F_WRITE(FILE_ID, 'ALIM_DONNEES_FDSQT2_ES ## Flux plusieurs tables   ##'); /*  TT  */
		
		
				FOR S_FDSQTT_TESTFORMAT_C IN C_FDSQTT_TESTFORMAT_C  LOOP  /*  TT IN TT  */   /* S_FDSQA_FORMA_CHRISTIAN */
				

					BEGIN

						IF V_ERR=1 THEN EXIT;   /* exit permet de sortir de la boucle (UNIQUEMENT) */
						END IF;

						IF MOD(V_UPD + V_INS, 100)=0 THEN COMMIT;
						END IF;

						INSERT INTO FPH.FPHQT_ES_CTT  /* T */
								(                 
Date_Traitement,         
CD_PAYS ,
CD_SOURCE ,
RESEAU ,
CTR_NUM_1 ,
CTR_NUM_2 ,
BUY_BACK_TYPE ,
CL_SIREN ,
CL_NOM ,
TVA_CD ,
CL_TYP_LIB ,
CL_APE_CD ,
CL_APE_LIB ,
CL_ADR_FACT ,
CL_ADR_CP ,
CL_ADR_VILLE ,
CTR_RETAIL ,
CIVILITE_SIGNATAIRE ,
NOM_SIGNATAIRE ,
PRENOM_SIGNATAIRE ,
TEL_CONTACT ,
EMAIL_SIGNATAIRE ,
DUREE_INI ,
KM_PIVOT_INI ,
ER_PIVOT_INI ,
CTR_DT_FIN ,
CTR_DMIN_B2 ,
CTR_DMIN_B1 ,
CTR_DTOT ,
CTR_DMAX_B1 ,
CTR_DMAX_B2 ,
CTR_KMIN_B2 ,
CTR_KMIN_B1 ,
CTR_KM_PIVOT ,
CTR_KMAX_B1 ,
CTR_KMAX_B2 ,
CTR_ERMIN_B2 ,
CTR_ERMIN_B1 ,
CTR_ER_HT ,
CTR_ERMAX_B1 ,
CTR_ERMAX_B2 ,
GIFP_DER_KM ,
GIFP_DT_DER_KM ,
GIFP_ORIG_DER_KM ,
GIFP_PROJ_KM_FCT ,
v_ecart_km ,
CTR_TYP_SOUP ,
REDEV_KM_EXCED ,
LOY_MTHT_FIN ,
LOY_MT_HT ,
LOY_MT_TTC ,
LOY_FLG_GPF ,
LOY_FLG_MAIN ,
LOY_PCT_CEM ,
LOY_FLG_TR ,
LOY_FLG_ASS ,
LOY_FLG_IP ,
LOY_FLG_AFD ,
LOY_FLG_CARBU ,
FLAG_PNEUS_ETE ,
FLAG_PNEUS_HIVER ,
FLAG_VEHICULE_DE_REMPLACEMENT ,
FLAG_CEM_FLEX ,
FLAG_PNEU_MIXTE ,
FLAG_JOCKEY ,
FLAG_PASS_RESTIT ,
VEH_FAM ,
VEH_LIB_LS ,
VEH_LCDV ,
VEH_LCDV_LIB ,
CARROSSERIE ,
VEH_COUL ,
VEH_GENRE ,
VEH_NRJ ,
VEH_CO2 ,
VEH_PUIS_FISC ,
VEH_TYP_MINE ,
VEH_NO_SERIE ,
VEH_BLVD ,
VEH_NO_IMMAT ,
CTR_DT_LIV ,
NOM_CHAUFFEUR ,
GENRE_CD_TRANSCO ,
VEH_MTHT_CAT ,
VEH_MTHT_OPT ,
VEH_PCT_REM ,
VEH_MTHT_ACC ,
VEH_MTHT_TRANS ,
VEH_GARN ,
VEH_OPT1 ,
VEH_OPT2 ,
VEH_OPT3 ,
VEH_OPT4 ,
VEH_OPT5 ,
VEH_OPT6 ,
VEH_OPT7 ,
VEH_OPT8 ,
VEH_OPT9 ,
VEH_OPT10 ,
VEH_OPT11 ,
VEH_ACC1 ,
VEH_ACC2 ,
VEH_ACC3 ,
VEH_ACC4 ,
VEH_ACC5 ,
VEH_TRF1 ,
VEH_TRF2 ,
VEH_TRF3 ,
VEH_TRF4 ,
PDV_RP_RRDI ,
PDV_RP_NOM ,
PDV_REPRENEUR_RAISON_SOCIALE ,
PDV_REPRENEUR_ADRESSE ,
PDV_REPRENEUR_CODE_POSTAL ,
PDV_REPRENEUR_VILLE ,
PDV_FT_RRDI ,
PDV_FT_NOM ,
CD_VENDEUR ,
PDV_VD_NOM ,
PDV_FOURNISSEUR_RAISON_SOCIALE ,
PDV_FOURNISSEUR_ADRESSE ,
PDV_FOURNISSEUR_CODE_POSTAL ,
PDV_FOURNISSEUR_VILLE 

								)
						VALUES
								(                /* TT */
                
S_FDSQTT_TESTFORMAT_C.Date_Traitement ,
S_FDSQTT_TESTFORMAT_C.CD_PAYS ,
S_FDSQTT_TESTFORMAT_C.CD_SOURCE ,
S_FDSQTT_TESTFORMAT_C.RESEAU ,
S_FDSQTT_TESTFORMAT_C.CTR_NUM_1 ,
S_FDSQTT_TESTFORMAT_C.CTR_NUM_2 ,
S_FDSQTT_TESTFORMAT_C.BUY_BACK_TYPE ,
S_FDSQTT_TESTFORMAT_C.CL_SIREN ,
S_FDSQTT_TESTFORMAT_C.CL_NOM ,
S_FDSQTT_TESTFORMAT_C.TVA_CD ,
S_FDSQTT_TESTFORMAT_C.CL_TYP_LIB ,
S_FDSQTT_TESTFORMAT_C.CL_APE_CD ,
S_FDSQTT_TESTFORMAT_C.CL_APE_LIB ,
S_FDSQTT_TESTFORMAT_C.CL_ADR_FACT ,
S_FDSQTT_TESTFORMAT_C.CL_ADR_CP ,
S_FDSQTT_TESTFORMAT_C.CL_ADR_VILLE ,
S_FDSQTT_TESTFORMAT_C.CTR_RETAIL ,
S_FDSQTT_TESTFORMAT_C.CIVILITE_SIGNATAIRE ,
S_FDSQTT_TESTFORMAT_C.NOM_SIGNATAIRE ,
S_FDSQTT_TESTFORMAT_C.PRENOM_SIGNATAIRE ,
S_FDSQTT_TESTFORMAT_C.TEL_CONTACT ,
S_FDSQTT_TESTFORMAT_C.EMAIL_SIGNATAIRE ,
S_FDSQTT_TESTFORMAT_C.DUREE_INI ,
S_FDSQTT_TESTFORMAT_C.KM_PIVOT_INI ,
S_FDSQTT_TESTFORMAT_C.ER_PIVOT_INI ,
S_FDSQTT_TESTFORMAT_C.CTR_DT_FIN ,
S_FDSQTT_TESTFORMAT_C.CTR_DMIN_B2 ,
S_FDSQTT_TESTFORMAT_C.CTR_DMIN_B1 ,
S_FDSQTT_TESTFORMAT_C.CTR_DTOT ,
S_FDSQTT_TESTFORMAT_C.CTR_DMAX_B1 ,
S_FDSQTT_TESTFORMAT_C.CTR_DMAX_B2 ,
S_FDSQTT_TESTFORMAT_C.CTR_KMIN_B2 ,
S_FDSQTT_TESTFORMAT_C.CTR_KMIN_B1 ,
S_FDSQTT_TESTFORMAT_C.CTR_KM_PIVOT ,
S_FDSQTT_TESTFORMAT_C.CTR_KMAX_B1 ,
S_FDSQTT_TESTFORMAT_C.CTR_KMAX_B2 ,
S_FDSQTT_TESTFORMAT_C.CTR_ERMIN_B2 ,
S_FDSQTT_TESTFORMAT_C.CTR_ERMIN_B1 ,
S_FDSQTT_TESTFORMAT_C.CTR_ER_HT ,
S_FDSQTT_TESTFORMAT_C.CTR_ERMAX_B1 ,
S_FDSQTT_TESTFORMAT_C.CTR_ERMAX_B2 ,
S_FDSQTT_TESTFORMAT_C.GIFP_DER_KM ,
S_FDSQTT_TESTFORMAT_C.GIFP_DT_DER_KM ,
S_FDSQTT_TESTFORMAT_C.GIFP_ORIG_DER_KM ,
S_FDSQTT_TESTFORMAT_C.GIFP_PROJ_KM_FCT ,
S_FDSQTT_TESTFORMAT_C.v_ecart_km ,
S_FDSQTT_TESTFORMAT_C.CTR_TYP_SOUP ,
S_FDSQTT_TESTFORMAT_C.REDEV_KM_EXCED ,
S_FDSQTT_TESTFORMAT_C.LOY_MTHT_FIN ,
S_FDSQTT_TESTFORMAT_C.LOY_MT_HT ,
S_FDSQTT_TESTFORMAT_C.LOY_MT_TTC ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_GPF ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_MAIN ,
S_FDSQTT_TESTFORMAT_C.LOY_PCT_CEM ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_TR ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_ASS ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_IP ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_AFD ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_CARBU ,
S_FDSQTT_TESTFORMAT_C.FLAG_PNEUS_ETE ,
S_FDSQTT_TESTFORMAT_C.FLAG_PNEUS_HIVER ,
S_FDSQTT_TESTFORMAT_C.FLAG_VEHICULE_DE_REMPLACEMENT ,
S_FDSQTT_TESTFORMAT_C.FLAG_CEM_FLEX ,
S_FDSQTT_TESTFORMAT_C.FLAG_PNEU_MIXTE ,
S_FDSQTT_TESTFORMAT_C.FLAG_JOCKEY ,
S_FDSQTT_TESTFORMAT_C.FLAG_PASS_RESTIT ,
S_FDSQTT_TESTFORMAT_C.VEH_FAM ,
S_FDSQTT_TESTFORMAT_C.VEH_LIB_LS ,
S_FDSQTT_TESTFORMAT_C.VEH_LCDV ,
S_FDSQTT_TESTFORMAT_C.VEH_LCDV_LIB ,
S_FDSQTT_TESTFORMAT_C.CARROSSERIE ,
S_FDSQTT_TESTFORMAT_C.VEH_COUL ,
S_FDSQTT_TESTFORMAT_C.VEH_GENRE ,
S_FDSQTT_TESTFORMAT_C.VEH_NRJ ,
S_FDSQTT_TESTFORMAT_C.VEH_CO2 ,
S_FDSQTT_TESTFORMAT_C.VEH_PUIS_FISC ,
S_FDSQTT_TESTFORMAT_C.VEH_TYP_MINE ,
S_FDSQTT_TESTFORMAT_C.VEH_NO_SERIE ,
S_FDSQTT_TESTFORMAT_C.VEH_BLVD ,
S_FDSQTT_TESTFORMAT_C.VEH_NO_IMMAT ,
S_FDSQTT_TESTFORMAT_C.CTR_DT_LIV ,
S_FDSQTT_TESTFORMAT_C.NOM_CHAUFFEUR ,
S_FDSQTT_TESTFORMAT_C.GENRE_CD_TRANSCO ,
S_FDSQTT_TESTFORMAT_C.VEH_MTHT_CAT ,
S_FDSQTT_TESTFORMAT_C.VEH_MTHT_OPT ,
S_FDSQTT_TESTFORMAT_C.VEH_PCT_REM ,
S_FDSQTT_TESTFORMAT_C.VEH_MTHT_ACC ,
S_FDSQTT_TESTFORMAT_C.VEH_MTHT_TRANS ,
S_FDSQTT_TESTFORMAT_C.VEH_GARN ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT1 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT2 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT3 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT4 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT5 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT6 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT7 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT8 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT9 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT10 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT11 ,
S_FDSQTT_TESTFORMAT_C.VEH_ACC1 ,
S_FDSQTT_TESTFORMAT_C.VEH_ACC2 ,
S_FDSQTT_TESTFORMAT_C.VEH_ACC3 ,
S_FDSQTT_TESTFORMAT_C.VEH_ACC4 ,
S_FDSQTT_TESTFORMAT_C.VEH_ACC5 ,
S_FDSQTT_TESTFORMAT_C.VEH_TRF1 ,
S_FDSQTT_TESTFORMAT_C.VEH_TRF2 ,
S_FDSQTT_TESTFORMAT_C.VEH_TRF3 ,
S_FDSQTT_TESTFORMAT_C.VEH_TRF4 ,
S_FDSQTT_TESTFORMAT_C.PDV_RP_RRDI ,
S_FDSQTT_TESTFORMAT_C.PDV_RP_NOM ,
S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_RAISON_SOCIALE ,
S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_ADRESSE ,
S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_CODE_POSTAL ,
S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_VILLE ,
S_FDSQTT_TESTFORMAT_C.PDV_FT_RRDI ,
S_FDSQTT_TESTFORMAT_C.PDV_FT_NOM ,
S_FDSQTT_TESTFORMAT_C.CD_VENDEUR ,
S_FDSQTT_TESTFORMAT_C.PDV_VD_NOM ,
S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_RAISON_SOCIALE ,
S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_ADRESSE ,
S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_CODE_POSTAL ,
S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_VILLE 								
								);

						V_INS := V_INS + 1;

					
					EXCEPTION

						WHEN DUP_VAL_ON_INDEX THEN
						UPDATE  FPH.FPHQT_ES_CTT     /* T */
						SET     /* TT */
Date_Traitement  =  S_FDSQTT_TESTFORMAT_C.Date_Traitement ,
CD_PAYS  =  S_FDSQTT_TESTFORMAT_C.CD_PAYS ,
CD_SOURCE  =  S_FDSQTT_TESTFORMAT_C.CD_SOURCE ,
RESEAU  =  S_FDSQTT_TESTFORMAT_C.RESEAU ,
CTR_NUM  =  S_FDSQTT_TESTFORMAT_C.CTR_NUM ,
CTR_NUM  =  S_FDSQTT_TESTFORMAT_C.CTR_NUM ,
BUY_BACK_TYPE  =  S_FDSQTT_TESTFORMAT_C.BUY_BACK_TYPE ,
CL_SIREN  =  S_FDSQTT_TESTFORMAT_C.CL_SIREN ,
CL_NOM  =  S_FDSQTT_TESTFORMAT_C.CL_NOM ,
TVA_CD  =  S_FDSQTT_TESTFORMAT_C.TVA_CD ,
CL_TYP_LIB  =  S_FDSQTT_TESTFORMAT_C.CL_TYP_LIB ,
CL_APE_CD  =  S_FDSQTT_TESTFORMAT_C.CL_APE_CD ,
CL_APE_LIB  =  S_FDSQTT_TESTFORMAT_C.CL_APE_LIB ,
CL_ADR_FACT  =  S_FDSQTT_TESTFORMAT_C.CL_ADR_FACT ,
CL_ADR_CP  =  S_FDSQTT_TESTFORMAT_C.CL_ADR_CP ,
CL_ADR_VILLE  =  S_FDSQTT_TESTFORMAT_C.CL_ADR_VILLE ,
CTR_RETAIL  =  S_FDSQTT_TESTFORMAT_C.CTR_RETAIL ,
CIVILITE_SIGNATAIRE  =  S_FDSQTT_TESTFORMAT_C.CIVILITE_SIGNATAIRE ,
NOM_SIGNATAIRE  =  S_FDSQTT_TESTFORMAT_C.NOM_SIGNATAIRE ,
PRENOM_SIGNATAIRE  =  S_FDSQTT_TESTFORMAT_C.PRENOM_SIGNATAIRE ,
TEL_CONTACT  =  S_FDSQTT_TESTFORMAT_C.TEL_CONTACT ,
EMAIL_SIGNATAIRE  =  S_FDSQTT_TESTFORMAT_C.EMAIL_SIGNATAIRE ,
DUREE_INI  =  S_FDSQTT_TESTFORMAT_C.DUREE_INI ,
KM_PIVOT_INI  =  S_FDSQTT_TESTFORMAT_C.KM_PIVOT_INI ,
ER_PIVOT_INI  =  S_FDSQTT_TESTFORMAT_C.ER_PIVOT_INI ,
CTR_DT_FIN  =  S_FDSQTT_TESTFORMAT_C.CTR_DT_FIN ,
CTR_DMIN_B2  =  S_FDSQTT_TESTFORMAT_C.CTR_DMIN_B2 ,
CTR_DMIN_B1  =  S_FDSQTT_TESTFORMAT_C.CTR_DMIN_B1 ,
CTR_DTOT  =  S_FDSQTT_TESTFORMAT_C.CTR_DTOT ,
CTR_DMAX_B1  =  S_FDSQTT_TESTFORMAT_C.CTR_DMAX_B1 ,
CTR_DMAX_B2  =  S_FDSQTT_TESTFORMAT_C.CTR_DMAX_B2 ,
CTR_KMIN_B2  =  S_FDSQTT_TESTFORMAT_C.CTR_KMIN_B2 ,
CTR_KMIN_B1  =  S_FDSQTT_TESTFORMAT_C.CTR_KMIN_B1 ,
CTR_KM_PIVOT  =  S_FDSQTT_TESTFORMAT_C.CTR_KM_PIVOT ,
CTR_KMAX_B1  =  S_FDSQTT_TESTFORMAT_C.CTR_KMAX_B1 ,
CTR_KMAX_B2  =  S_FDSQTT_TESTFORMAT_C.CTR_KMAX_B2 ,
CTR_ERMIN_B2  =  S_FDSQTT_TESTFORMAT_C.CTR_ERMIN_B2 ,
CTR_ERMIN_B1  =  S_FDSQTT_TESTFORMAT_C.CTR_ERMIN_B1 ,
CTR_ER_HT  =  S_FDSQTT_TESTFORMAT_C.CTR_ER_HT ,
CTR_ERMAX_B1  =  S_FDSQTT_TESTFORMAT_C.CTR_ERMAX_B1 ,
CTR_ERMAX_B2  =  S_FDSQTT_TESTFORMAT_C.CTR_ERMAX_B2 ,
GIFP_DER_KM  =  S_FDSQTT_TESTFORMAT_C.GIFP_DER_KM ,
GIFP_DT_DER_KM  =  S_FDSQTT_TESTFORMAT_C.GIFP_DT_DER_KM ,
GIFP_ORIG_DER_KM  =  S_FDSQTT_TESTFORMAT_C.GIFP_ORIG_DER_KM ,
GIFP_PROJ_KM_FCT  =  S_FDSQTT_TESTFORMAT_C.GIFP_PROJ_KM_FCT ,
v_ecart_km  =  S_FDSQTT_TESTFORMAT_C.v_ecart_km ,
CTR_TYP_SOUP  =  S_FDSQTT_TESTFORMAT_C.CTR_TYP_SOUP ,
REDEV_KM_EXCED  =  S_FDSQTT_TESTFORMAT_C.REDEV_KM_EXCED ,
LOY_MTHT_FIN  =  S_FDSQTT_TESTFORMAT_C.LOY_MTHT_FIN ,
LOY_MT_HT  =  S_FDSQTT_TESTFORMAT_C.LOY_MT_HT ,
LOY_MT_TTC  =  S_FDSQTT_TESTFORMAT_C.LOY_MT_TTC ,
LOY_FLG_GPF  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_GPF ,
LOY_FLG_MAIN  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_MAIN ,
LOY_PCT_CEM  =  S_FDSQTT_TESTFORMAT_C.LOY_PCT_CEM ,
LOY_FLG_TR  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_TR ,
LOY_FLG_ASS  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_ASS ,
LOY_FLG_IP  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_IP ,
LOY_FLG_AFD  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_AFD ,
LOY_FLG_CARBU  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_CARBU ,
FLAG_PNEUS_ETE  =  S_FDSQTT_TESTFORMAT_C.FLAG_PNEUS_ETE ,
FLAG_PNEUS_HIVER  =  S_FDSQTT_TESTFORMAT_C.FLAG_PNEUS_HIVER ,
FLAG_VEHICULE_DE_REMPLACEMENT  =  S_FDSQTT_TESTFORMAT_C.FLAG_VEHICULE_DE_REMPLACEMENT ,
FLAG_CEM_FLEX  =  S_FDSQTT_TESTFORMAT_C.FLAG_CEM_FLEX ,
FLAG_PNEU_MIXTE  =  S_FDSQTT_TESTFORMAT_C.FLAG_PNEU_MIXTE ,
FLAG_JOCKEY  =  S_FDSQTT_TESTFORMAT_C.FLAG_JOCKEY ,
FLAG_PASS_RESTIT  =  S_FDSQTT_TESTFORMAT_C.FLAG_PASS_RESTIT ,
VEH_FAM  =  S_FDSQTT_TESTFORMAT_C.VEH_FAM ,
VEH_LIB_LS  =  S_FDSQTT_TESTFORMAT_C.VEH_LIB_LS ,
VEH_LCDV  =  S_FDSQTT_TESTFORMAT_C.VEH_LCDV ,
VEH_LCDV_LIB  =  S_FDSQTT_TESTFORMAT_C.VEH_LCDV_LIB ,
CARROSSERIE  =  S_FDSQTT_TESTFORMAT_C.CARROSSERIE ,
VEH_COUL  =  S_FDSQTT_TESTFORMAT_C.VEH_COUL ,
VEH_GENRE  =  S_FDSQTT_TESTFORMAT_C.VEH_GENRE ,
VEH_NRJ  =  S_FDSQTT_TESTFORMAT_C.VEH_NRJ ,
VEH_CO2  =  S_FDSQTT_TESTFORMAT_C.VEH_CO2 ,
VEH_PUIS_FISC  =  S_FDSQTT_TESTFORMAT_C.VEH_PUIS_FISC ,
VEH_TYP_MINE  =  S_FDSQTT_TESTFORMAT_C.VEH_TYP_MINE ,
VEH_NO_SERIE  =  S_FDSQTT_TESTFORMAT_C.VEH_NO_SERIE ,
VEH_BLVD  =  S_FDSQTT_TESTFORMAT_C.VEH_BLVD ,
VEH_NO_IMMAT  =  S_FDSQTT_TESTFORMAT_C.VEH_NO_IMMAT ,
CTR_DT_LIV  =  S_FDSQTT_TESTFORMAT_C.CTR_DT_LIV ,
NOM_CHAUFFEUR  =  S_FDSQTT_TESTFORMAT_C.NOM_CHAUFFEUR ,
GENRE_CD_TRANSCO  =  S_FDSQTT_TESTFORMAT_C.GENRE_CD_TRANSCO ,
VEH_MTHT_CAT  =  S_FDSQTT_TESTFORMAT_C.VEH_MTHT_CAT ,
VEH_MTHT_OPT  =  S_FDSQTT_TESTFORMAT_C.VEH_MTHT_OPT ,
VEH_PCT_REM  =  S_FDSQTT_TESTFORMAT_C.VEH_PCT_REM ,
VEH_MTHT_ACC  =  S_FDSQTT_TESTFORMAT_C.VEH_MTHT_ACC ,
VEH_MTHT_TRANS  =  S_FDSQTT_TESTFORMAT_C.VEH_MTHT_TRANS ,
VEH_GARN  =  S_FDSQTT_TESTFORMAT_C.VEH_GARN ,
VEH_OPT1  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT1 ,
VEH_OPT2  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT2 ,
VEH_OPT3  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT3 ,
VEH_OPT4  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT4 ,
VEH_OPT5  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT5 ,
VEH_OPT6  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT6 ,
VEH_OPT7  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT7 ,
VEH_OPT8  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT8 ,
VEH_OPT9  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT9 ,
VEH_OPT10  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT10 ,
VEH_OPT11  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT11 ,
VEH_ACC1  =  S_FDSQTT_TESTFORMAT_C.VEH_ACC1 ,
VEH_ACC2  =  S_FDSQTT_TESTFORMAT_C.VEH_ACC2 ,
VEH_ACC3  =  S_FDSQTT_TESTFORMAT_C.VEH_ACC3 ,
VEH_ACC4  =  S_FDSQTT_TESTFORMAT_C.VEH_ACC4 ,
VEH_ACC5  =  S_FDSQTT_TESTFORMAT_C.VEH_ACC5 ,
VEH_TRF1  =  S_FDSQTT_TESTFORMAT_C.VEH_TRF1 ,
VEH_TRF2  =  S_FDSQTT_TESTFORMAT_C.VEH_TRF2 ,
VEH_TRF3  =  S_FDSQTT_TESTFORMAT_C.VEH_TRF3 ,
VEH_TRF4  =  S_FDSQTT_TESTFORMAT_C.VEH_TRF4 ,
PDV_RP_RRDI  =  S_FDSQTT_TESTFORMAT_C.PDV_RP_RRDI ,
PDV_RP_NOM  =  S_FDSQTT_TESTFORMAT_C.PDV_RP_NOM ,
PDV_REPRENEUR_RAISON_SOCIALE  =  S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_RAISON_SOCIALE ,
PDV_REPRENEUR_ADRESSE  =  S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_ADRESSE ,
PDV_REPRENEUR_CODE_POSTAL  =  S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_CODE_POSTAL ,
PDV_REPRENEUR_VILLE  =  S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_VILLE ,
PDV_FT_RRDI  =  S_FDSQTT_TESTFORMAT_C.PDV_FT_RRDI ,
PDV_FT_NOM  =  S_FDSQTT_TESTFORMAT_C.PDV_FT_NOM ,
CD_VENDEUR  =  S_FDSQTT_TESTFORMAT_C.CD_VENDEUR ,
PDV_VD_NOM  =  S_FDSQTT_TESTFORMAT_C.PDV_VD_NOM ,
PDV_FOURNISSEUR_RAISON_SOCIALE  =  S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_RAISON_SOCIALE ,
PDV_FOURNISSEUR_ADRESSE  =  S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_ADRESSE ,
PDV_FOURNISSEUR_CODE_POSTAL  =  S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_CODE_POSTAL ,
PDV_FOURNISSEUR_VILLE  =  S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_VILLE 

                where CTR_NUM = S_FDSQTT_TESTFORMAT_C.CTR_NUM     ----CTR_NUM, VEH_TYP_MINE, VEH_NO_SERIE, VEH_FAM, CD_PAYS   ---S_Lssrvc_Sid  =  S_Fdsqtt_Testformat_C.S_Lssrvc_Sid;
               and  VEH_TYP_MINE =  S_FDSQTT_TESTFORMAT_C.VEH_TYP_MINE
                and VEH_NO_SERIE =  S_FDSQTT_TESTFORMAT_C.VEH_NO_SERIE
                and FV_CD_FAM_VEHICULE = S_FDSQTT_TESTFORMAT_C.FV_CD_FAM_VEHICULE
                and CD_PAYS ='ES' ;
                
															--IE_AFFAIRE, VB_VIN, DE_FG_VERSION, FV_CD_FAM_VEHICULE, FV_CDPAYS
					
						V_UPD := V_UPD + 1;

		
						WHEN OTHERS THEN  
							COMMIT;  
							V_ERR := 1;
              
							V_ERROR := SUBSTR('SQLCODE: '||TO_CHAR(SQLCODE)||' -ERROR: '||SQLERRM,1,4000);   
							RES := FPHQAUT.F_WRITE(FILE_ID, 'ALIM_DONNEES_FDSQT2_ES ## Message Erreur pl/sql :' ||SQLERRM);
								
						RETURN V_ERR;
					END;
				END LOOP;

				COMMIT;

     res := FPHQAUT.F_WRITE(file_id, 'ALIM_LSITCVVN Nombre de creations :'||V_INS);
     res := FPHQAUT.F_WRITE(file_id, 'ALIM_LSITCVVN Nombre de mises a jour :'||V_UPD);
     --res := FPHQAUT.F_WRITE(file_id, 'ALIM_LSITCVVN Nombre de suppressions :'||v_SUP);
     res := FPHQAUT.F_WRITE(file_id, '');
     UTL_FILE.FCLOSE(file_id);
     -- 
     v_inserts := V_INS;
     v_updates := V_UPD;
				RETURN V_ERR;
			End;

		/* end; */
   

    
  END ALIM_DONNEES_FDSQT2_ES;








  FUNCTION EXPORT_FDSQT2_ES (NOMLOG      VARCHAR2,
                        P_DATE_TRAI DATE,                 
                       P_PATH    VARCHAR2,
                        P_FILENAME  VARCHAR2) RETURN NUMBER AS
  BEGIN
    /* TODO implementation required */
    RETURN NULL;
  END EXPORT_FDSQT2_ES;





  FUNCTION MAIN_FDSQT2_ES (NOMLOG      VARCHAR2,
                              P_DATE_TRAI DATE,
                              P_PATH VARCHAR2,
                              P_FILENAME VARCHAR2) RETURN NUMBER AS
  BEGIN
    /* TODO implementation required */
    RETURN NULL;
  END MAIN_FDSQT2_ES;

END FPHQACT2;           V_UPDATES     OUT NUMBER,
                                  V_ERROR       OUT VARCHAR2) RETURN NUMBER IS
  
  
      P_DATE_SITU          date;
      V_ERR                NUMBER := 0;
      V_INS                NUMBER := 0;
      V_UPD                NUMBER := 0;
      FILE_ID              UTL_FILE.FILE_TYPE;
      RES                  NUMBER := 0;
      V_NOM_TRAIT          VARCHAR2(50) := 'ALIM_DONNEES_FDSQT2_ES';
      V_CODE_PAYS          VARCHAR2(2);
    
    

        CURSOR C_FDSQTT_TESTFORMAT_C IS  /*  TT  */  /* C_FDSQTRFP    FDSQA_FORMA_CHRISTIAN    */   

        To_Char(Sysdate, 'DD/MM/YYYY') As Date_De_Traitement,
Fph.Fphqt90.Py_Cd_Pays As Cd_Pays,

---------

FPHQT90.PY_CD_PAYS  AS   CD_PAYS ,
'EKIP'  AS   CD_SOURCE ,
FPHQT90.ID_RESEAU  AS   RESEAU ,
FPHQT90.IE_AFFAIRE  AS   CTR_NUM_1 ,
FPHQT90.IE_AFFAIRE  AS   CTR_NUM_2 ,
NULL  AS   BUY_BACK_TYPE ,
FPHQTTI.NIF  AS   CL_SIREN ,
FPHQTTI.NOM  AS   CL_NOM ,
NULL  AS   TVA_CD ,
FPHQTTI.TYPE_SEGMENT  AS   CL_TYP_LIB ,
FPHQTTI.CODE_APE  AS   CL_APE_CD ,
FPHQTTI.SECT_ACTIVITE  AS   CL_APE_LIB ,
CONCAT(FPHQTTI.ANC_NO_RUE,' ',FPHQTTI.ANC_NOM_RUE) as CL_ADR_FACT, 
FPHQTTI.ANC_CODE_POSTAL  AS   CL_ADR_CP ,
FPHQTTI.ANC_LOCALITE  AS   CL_ADR_VILLE ,
NULL  AS   CTR_RETAIL ,
NULL AS   CIVILITE_SIGNATAIRE, --FPHQTCL.CL_IN_IDTITRE (CD avec jointure sur table LIB : FNMVTI0)  AS   CIVILITE_SIGNATAIRE ,
NULL AS   NOM_SIGNATAIRE , --FPHQTCL.CL_RE_NOM1  AS   NOM_SIGNATAIRE ,
NULL AS   PRENOM_SIGNATAIRE , --FPHQTCL.CL_RE_PRNOM  AS   PRENOM_SIGNATAIRE ,
FPHQTTI.TELEPHONE  AS   TEL_CONTACT ,
FPHQTTI.EMAIL  AS   EMAIL_SIGNATAIRE ,
FPHQT91.DUREE_TOT_I  AS   DUREE_INI ,
FPHQT90.KM_CONTRACTUEL_INI  AS   KM_PIVOT_INI ,
FPHQT90.MT_VR_I  AS   ER_PIVOT_INI ,
FPHQT90.DATE_MEL_FIN  AS   CTR_DT_FIN ,
NULL  AS   CTR_DMIN_B2 ,
NULL  AS   CTR_DMIN_B1 ,
FPHQT91.DUREE_TOT  AS   CTR_DTOT ,
NULL  AS   CTR_DMAX_B1 ,
NULL  AS   CTR_DMAX_B2 ,
FPHQT90.BORNE_KM_INF_2  AS   CTR_KMIN_B2 ,
FPHQT90.BORNE_KM_INF_1  AS   CTR_KMIN_B1 ,
FPHQT90.KM_CONTRACTUEL  AS   CTR_KM_PIVOT ,
FPHQT90.BORNE_KM_SUPP_1  AS   CTR_KMAX_B1 ,
FPHQT90.BORNE_KM_SUPP_2  AS   CTR_KMAX_B2 ,
NULL  AS   CTR_ERMIN_B2 ,
NULL  AS   CTR_ERMIN_B1 ,
FPHQT90.MT_VR  AS   CTR_ER_HT ,
NULL  AS   CTR_ERMAX_B1 ,
NULL  AS   CTR_ERMAX_B2 ,
FPHQTVB.VB_KM_REL  AS   GIFP_DER_KM ,
FPHQTVB.VB_DT_RELKM  AS   GIFP_DT_DER_KM ,
FPHQTVB.VB_CD_SRCEVT  AS   GIFP_ORIG_DER_KM ,
NVL(fph.Fphqtvb.Vb_Km_Rel, '0') * NVL(fph.fphqt90.KM_CONTRACTUEL, '0') / Months_Between(Sysdate, to_date(Fph.Fphqt90.Date_Megd, 'DD/MM/YYYY')) as GIFP_PROJ_KM_FCT,
-- effacer : FPHQT90.(GIFP_DER_KM  / months_between (sysdate, DATE_MEGD) ) * KM_CONTRACTUEL   AS   GIFP_PROJ_KM_FCT ,
CASE CTR_KM_PIVOT WHEN 0 THEN  null
                WHEN NULL then null
                else case GIFP_PROJ_KM_FCT when 0 then  null
                                          when null then null
                                          else case (NVL(GIFP_PROJ_KM_FCT,'0') - NVL(CTR_KM_PIVOT,'0')) when 0 then  null
                                                                                                      else (GIFP_PROJ_KM_FCT - CTR_KM_PIVOT) end  end  end  v_ecart_km,     
/*"IF H1.CTR_KM_PIVOT = 0 OR H1.CTR_KM_PIVOT IS NULL OR H1.GIFP_PROJ_KM_FCT = 0 OR H1.GIFP_PROJ_KM_FCT IS NULL OR (H1.GIFP_PROJ_KM_FCT - H1.CTR_KM_PIVOT) = 0 THEN
           v_ecart_km :=NULL;
        ELSE
           v_ecart_km := (H1.GIFP_PROJ_KM_FCT - H1.CTR_KM_PIVOT);
        END IF;.  AS   v_ecart_km ,"*/
NULL  AS   CTR_TYP_SOUP ,
NULL  AS   REDEV_KM_EXCED ,
FPHQT91.MT_LOYER_TOT_HT  AS   LOY_MTHT_FIN ,
FPHQT91.MT_HT_ECH + FPHQT91.MT_HT_SERV  AS   LOY_MT_HT ,
FPHQT91.MT_TTC_ECH + FPHQT91.MT_TTC_SERV  AS   LOY_MT_TTC ,
NULL  AS   LOY_FLG_GPF ,
CASE CODE_TYPE_SERVICE_BO WHEN 'MNT' THEN 'OUI'  ELSE 'NON' end  LOY_FLG_MAIN ,  -- FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS 
NULL  AS   LOY_PCT_CEM ,
CASE CODE_TYPE_SERVICE_BO WHEN 'ATR' THEN 'OUI' ELSE 'NON' END LOY_FLG_TR, --  FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   LOY_FLG_TR ,
CASE CODE_TYPE_SERVICE_BO WHEN 'ASP' THEN 'OUI' WHEN 'ASR' THEN 'OUI' WHEN 'AST' then 'OUI' else 'NON' end  LOY_FLG_ASS, -- FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   LOY_FLG_ASS ,
CASE CODE_TYPE_SERVICE_BO WHEN 'KUA' THEN 'OUI' else 'NON' end  LOY_FLG_IP, --FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   LOY_FLG_IP ,
NULL  AS   LOY_FLG_AFD ,
NULL  AS   LOY_FLG_CARBU ,
CASE CODE_TYPE_SERVICE_BO WHEN 'PNE' THEN 'OUI' ELSE 'NON' END FLAG_PNEUS_ETE, --FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   FLAG_PNEUS_ETE ,
CASE CODE_TYPE_SERVICE_BO WHEN 'PNH'THEN 'OUI' ELSE 'NON' END  FLAG_PNEUS_HIVER, --FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   FLAG_PNEUS_HIVER ,
CASE CODE_TYPE_SERVICE_BO WHEN 'PNH' THEN 'OUI' ELSE 'NON' end FLAG_VEHICULE_DE_REMPLACEMENT, --FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   FLAG_VEHICULE_DE_REMPLACEMENT ,
NULL  AS   FLAG_CEM_FLEX ,
case CODE_TYPE_SERVICE_BO when 'PN4' then 'OUI' ELSE 'NON' end FLAG_PNEU_MIXTE, --FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   FLAG_PNEU_MIXTE ,
NULL  AS   FLAG_JOCKEY ,
case CODE_TYPE_SERVICE_BO when 'PAR' then 'OUI' else 'NON' END FLAG_PASS_RESTIT,-- FPHQT92.Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   FLAG_PASS_RESTIT ,
FPHQTFV.FV_CD_FAM_VEHICULE  AS   VEH_FAM ,
FPHQTFV.FV_LIB_FAM_VEHICULE  AS   VEH_LIB_LS ,
FPHQT90.CODE_PSA  AS   VEH_LCDV ,
FPHQT90.LIB_COMMERCIAL  AS   VEH_LCDV_LIB ,
NULL  AS   CARROSSERIE ,
NULL  AS   VEH_COUL ,
FPHQT90.CODE_GENRE  AS   VEH_GENRE ,
FPHQT90.ENERGIE  AS   VEH_NRJ ,
FPHQT90.EMISSION_CO2  AS   VEH_CO2 ,
FPHQT90.PUISSANCE  AS   VEH_PUIS_FISC ,
FPHQT90.VIN  AS   VEH_TYP_MINE ,
FPHQT90.VIN  AS   VEH_NO_SERIE ,
FPHQT90.CODE_BLVD  AS   VEH_BLVD ,
FPHQT91.IMMATRICULATION  AS   VEH_NO_IMMAT ,
FPHQT90.DATE_LIVRAISON  AS   CTR_DT_LIV ,
FPHQTTI.NOM  AS   NOM_CHAUFFEUR ,
FPHQT90.CODE_GENRE  AS   GENRE_CD_TRANSCO ,
FPHQT90.MT_CATALOGUE  AS   VEH_MTHT_CAT ,
FPHQT90.MT_OPTIONS  AS   VEH_MTHT_OPT ,
FPHQT90.POURC_REMISE  AS   VEH_PCT_REM ,
FPHQT90.MT_ACCESSOIRES  AS   VEH_MTHT_ACC ,
NULL  AS   VEH_MTHT_TRANS ,
NULL  AS   VEH_GARN ,
NULL  AS   VEH_OPT1 ,
NULL  AS   VEH_OPT2 ,
NULL  AS   VEH_OPT3 ,
NULL  AS   VEH_OPT4 ,
NULL  AS   VEH_OPT5 ,
NULL  AS   VEH_OPT6 ,
NULL  AS   VEH_OPT7 ,
NULL  AS   VEH_OPT8 ,
NULL  AS   VEH_OPT9 ,
NULL  AS   VEH_OPT10 ,
NULL  AS   VEH_OPT11 ,
NULL  AS   VEH_ACC1 ,
NULL  AS   VEH_ACC2 ,
NULL  AS   VEH_ACC3 ,
NULL  AS   VEH_ACC4 ,
NULL  AS   VEH_ACC5 ,
NULL  AS   VEH_TRF1 ,
NULL  AS   VEH_TRF2 ,
NULL  AS   VEH_TRF3 ,
NULL  AS   VEH_TRF4 ,
FPHQT90.RACH_CODE_RRDI  AS   PDV_RP_RRDI ,
FPHQTTI.NOM  AS   PDV_RP_NOM ,
FPHQTTI.NOM  AS   PDV_REPRENEUR_RAISON_SOCIALE ,
CONCAT(FPHQTTI.ANC_NO_RUE, ' ', FPHQTTI.ANC_NOM_RUE)  AS   PDV_REPRENEUR_ADRESSE ,
FPHQTTI.ANC_CODE_POSTAL  AS   PDV_REPRENEUR_CODE_POSTAL ,
FPHQTTI.ANC_LOCALITE  AS   PDV_REPRENEUR_VILLE ,
NULL  AS   PDV_FT_RRDI ,
NULL  AS   PDV_FT_NOM ,
NULL  AS   CD_VENDEUR ,
NULL  AS   PDV_VD_NOM ,
NULL  AS   PDV_FOURNISSEUR_RAISON_SOCIALE ,
NULL  AS   PDV_FOURNISSEUR_ADRESSE ,
NULL  AS   PDV_FOURNISSEUR_CODE_POSTAL ,
NULL  AS   PDV_FOURNISSEUR_VILLE 



----------------
select  PY_CD_PAYS  AS   CD_PAYS ,
'EKIP'  AS   CD_SOURCE ,
ID_RESEAU  AS   RESEAU ,
IE_AFFAIRE  AS   CTR_NUM ,
--IE_AFFAIRE  AS   CTR_NUM ,
NULL  AS   BUY_BACK_TYPE ,
NIF  AS   CL_SIREN ,
NOM  AS   CL_NOM ,
NULL  AS   TVA_CD ,
TYPE_SEGMENT  AS   CL_TYP_LIB ,
CODE_APE  AS   CL_APE_CD ,
SECT_ACTIVITE  AS   CL_APE_LIB ,
ANC_NO_RUE  AS   CL_ADR_FACT ,
--- ANC_NOM_RUE)  AS   CL_ADR_FACT ,
ANC_CODE_POSTAL  AS   CL_ADR_CP ,
ANC_LOCALITE  AS   CL_ADR_VILLE ,
NULL AS   CTR_RETAIL ,
--CL_IN_IDTITRE (CD avec jointure sur table LIB : FNMVTI0)  AS   CIVILITE_SIGNATAIRE ,
CL_RE_NOM1  AS   NOM_SIGNATAIRE ,
CL_RE_PRNOM  AS   PRENOM_SIGNATAIRE ,
TELEPHONE  AS   TEL_CONTACT ,
EMAIL  AS   EMAIL_SIGNATAIRE ,
DUREE_TOT_I  AS   DUREE_INI ,
KM_CONTRACTUEL_INI  AS   KM_PIVOT_INI ,
MT_VR_I  AS   ER_PIVOT_INI ,
DATE_MEL_FIN  AS   CTR_DT_FIN ,
NULL  AS   CTR_DMIN_B2 ,
NULL  AS   CTR_DMIN_B1 ,
DUREE_TOT  AS   CTR_DTOT ,
NULL  AS   CTR_DMAX_B1 ,
NULL  AS   CTR_DMAX_B2 ,
BORNE_KM_INF_2  AS   CTR_KMIN_B2 ,
BORNE_KM_INF_1  AS   CTR_KMIN_B1 ,
KM_CONTRACTUEL  AS   CTR_KM_PIVOT ,
BORNE_KM_SUPP_1  AS   CTR_KMAX_B1 ,
BORNE_KM_SUPP_2  AS   CTR_KMAX_B2 ,
Null  AS   CTR_ERMIN_B2 ,
Null  AS   CTR_ERMIN_B1 ,
MT_VR  AS   CTR_ER_HT ,
Null  AS   CTR_ERMAX_B1 ,
Null  AS   CTR_ERMAX_B2 ,
VB_KM_REL  AS   GIFP_DER_KM ,
VB_DT_RELKM  AS   GIFP_DT_DER_KM ,
VB_CD_SRCEVT  AS   GIFP_ORIG_DER_KM ,
--(GIFP_DER_KM (colonne 42) / months_between(sysdate, DATE_MEGD) ) * KM_CONTRACTUEL (colonne 29)  AS   GIFP_PROJ_KM_FCT ,
NULL  AS   v_ecart_km ,
Null  AS   CTR_TYP_SOUP ,
Null  AS   REDEV_KM_EXCED ,
MT_LOYER_TOT_HT  AS   LOY_MTHT_FIN ,
MT_HT_ECH + MT_HT_SERV  AS   LOY_MT_HT ,
MT_TTC_ECH + MT_TTC_SERV  AS   LOY_MT_TTC ,
Null  AS   LOY_FLG_GPF ,
--Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   LOY_FLG_MAIN ,
Null  AS   LOY_PCT_CEM ,
--Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   LOY_FLG_TR ,
--Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   LOY_FLG_ASS ,
--Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   LOY_FLG_IP ,
NULL  AS   LOY_FLG_AFD ,
NULL  AS   LOY_FLG_CARBU ,
--Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   FLAG_PNEUS_ETE ,
--Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   FLAG_PNEUS_HIVER ,
--Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   FLAG_VEHICULE_DE_REMPLACEMENT ,
Null  AS   FLAG_CEM_FLEX ,
--Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   FLAG_PNEU_MIXTE ,
Null  AS   FLAG_JOCKEY ,
--Si Presence d'une ligne alors 'OUI' sinon 'NON'  AS   FLAG_PASS_RESTIT ,
FV_CD_FAM_VEHICULE  AS   VEH_FAM ,
FV_LIB_FAM_VEHICULE  AS   VEH_LIB_LS ,
CODE_PSA  AS   VEH_LCDV ,
LIB_COMMERCIAL  AS   VEH_LCDV_LIB ,
Null  AS   CARROSSERIE ,
Null  AS   VEH_COUL ,
CODE_GENRE  AS   VEH_GENRE ,
ENERGIE  AS   VEH_NRJ ,
EMISSION_CO2  AS   VEH_CO2 ,
PUISSANCE  AS   VEH_PUIS_FISC ,
VIN  AS   VEH_TYP_MINE ,
--VIN  AS   VEH_NO_SERIE ,
CODE_BLVD  AS   VEH_BLVD ,
IMMATRICULATION  AS   VEH_NO_IMMAT ,
DATE_LIVRAISON  AS   CTR_DT_LIV ,
NOM  AS   NOM_CHAUFFEUR ,
CODE_GENRE  AS   GENRE_CD_TRANSCO ,
MT_CATALOGUE  AS   VEH_MTHT_CAT ,
MT_OPTIONS  AS   VEH_MTHT_OPT ,
POURC_REMISE  AS   VEH_PCT_REM ,
MT_ACCESSOIRES  AS   VEH_MTHT_ACC ,
Null  AS   VEH_MTHT_TRANS ,
null  AS   VEH_GARN ,
null  AS   VEH_OPT1 ,
null  AS   VEH_OPT2 ,
null  AS   VEH_OPT3 ,
null  AS   VEH_OPT4 ,
null  AS   VEH_OPT5 ,
null  AS   VEH_OPT6 ,
null  AS   VEH_OPT7 ,
null  AS   VEH_OPT8 ,
null  AS   VEH_OPT9 ,
null  AS   VEH_OPT10 ,
null  AS   VEH_OPT11 ,
null  AS   VEH_ACC1 ,
null  AS   VEH_ACC2 ,
null  AS   VEH_ACC3 ,
null  AS   VEH_ACC4 ,
null  AS   VEH_ACC5 ,
null  AS   VEH_TRF1 ,
null  AS   VEH_TRF2 ,
null  AS   VEH_TRF3 ,
null  AS   VEH_TRF4 ,
RACH_CODE_RRDI  AS   PDV_RP_RRDI ,
NOM  AS   PDV_RP_NOM ,
--NOM  AS   PDV_REPRENEUR_RAISON_SOCIALE ,
ANC_NO_RUE AS   PDV_REPRENEUR_ADRESSE ,
--ANC_NOM_RUE  AS   PDV_REPRENEUR_ADRESSE ,"   -- ANC_NOM_RUE effacer
ANC_CODE_POSTAL  AS   PDV_REPRENEUR_CODE_POSTAL ,
ANC_LOCALITE  AS   PDV_REPRENEUR_VILLE ,
null  AS   PDV_FT_RRDI ,
null  AS   PDV_FT_NOM ,
null  AS   CD_VENDEUR ,
null  AS   PDV_VD_NOM ,
null  AS   PDV_FOURNISSEUR_RAISON_SOCIALE ,
null  AS   PDV_FOURNISSEUR_ADRESSE ,
null  AS   PDV_FOURNISSEUR_CODE_POSTAL ,
null  AS   PDV_FOURNISSEUR_VILLE 


from FPHQT90, FPHQT91, FPHQT92, FPHQTTI, FPHQTVB, FPHQTDE, FPHQTFV
where FPHQT90.IE_AFFAIRE = FPHQT91.IE_AFFAIRE
AND FPHQT92.IE_AFFAIRE(+) = FPHQT90.IE_AFFAIRE
AND FPHQTTI.IE_AFFAIRE(+) = FPHQT90.IE_AFFAIRE
AND FPHQTVB.VB_VIN(+) = FPHQT90.VIN
AND FPHQT90.IE_AFFAIRE = FPHQTDE.DE_NUM_CONTRAT(+)
AND FPHQTDE.DE_FG_VERSION(+) = 1
AND FPHQTFV.FV_CD_FAM_VEHICULE(+) = FPHQTDE.FV_CD_FAM_VEHICULE
AND FPHQTFV.FV_CDPAYS(+) = FPHQTDE.PY_CD_PAYS;   -- AVANT / AND FPHQTFV.FC_CD_PAYS(+) = FPHQTDE.PY_CD_PAYS;
     /*  ici vous avez mis fdsdwh or votre table temporaire se trouve dans fds */  /* FDSDWH.FDSQTTRFP  */
    
    
    
   BEGIN

				FILE_ID := FPHQAUT.F_OPEN(NOMLOG);
				RES := FPHQAUT.F_WRITE(FILE_ID, 'ALIM_DONNEES_FDSQT2_ES ## Alimentation de la table FPHQT_ES_CTT#');  /* T */  /* ALIM_FDSQTRFP et FDSQTRFP avant  */
				RES := FPHQAUT.F_WRITE(FILE_ID, 'ALIM_DONNEES_FDSQT2_ES ## Flux plusieurs tables   ##'); /*  TT  */
		
		
				FOR S_FDSQTT_TESTFORMAT_C IN C_FDSQTT_TESTFORMAT_C  LOOP  /*  TT IN TT  */   /* S_FDSQA_FORMA_CHRISTIAN */
				

					BEGIN

						IF V_ERR=1 THEN EXIT;   /* exit permet de sortir de la boucle (UNIQUEMENT) */
						END IF;

						IF MOD(V_UPD + V_INS, 100)=0 THEN COMMIT;
						END IF;

						INSERT INTO FPH.FPHQT_ES_CTT  /* T */
								(
Date_traitement , 
CD_PAYS ,
CD_SOURCE ,
RESEAU ,
CTR_NUM ,
CTR_NUM ,
BUY_BACK_TYPE ,
CL_SIREN ,
CL_NOM ,
TVA_CD ,
CL_TYP_LIB ,
CL_APE_CD ,
CL_APE_LIB ,
CL_ADR_FACT ,
CL_ADR_CP ,
CL_ADR_VILLE ,
CTR_RETAIL ,
CIVILITE_SIGNATAIRE ,
NOM_SIGNATAIRE ,
PRENOM_SIGNATAIRE ,
TEL_CONTACT ,
EMAIL_SIGNATAIRE ,
DUREE_INI ,
KM_PIVOT_INI ,
ER_PIVOT_INI ,
CTR_DT_FIN ,
CTR_DMIN_B2 ,
CTR_DMIN_B1 ,
CTR_DTOT ,
CTR_DMAX_B1 ,
CTR_DMAX_B2 ,
CTR_KMIN_B2 ,
CTR_KMIN_B1 ,
CTR_KM_PIVOT ,
CTR_KMAX_B1 ,
CTR_KMAX_B2 ,
CTR_ERMIN_B2 ,
CTR_ERMIN_B1 ,
CTR_ER_HT ,
CTR_ERMAX_B1 ,
CTR_ERMAX_B2 ,
GIFP_DER_KM ,
GIFP_DT_DER_KM ,
GIFP_ORIG_DER_KM ,
GIFP_PROJ_KM_FCT ,
v_ecart_km ,
CTR_TYP_SOUP ,
REDEV_KM_EXCED ,
LOY_MTHT_FIN ,
LOY_MT_HT ,
LOY_MT_TTC ,
LOY_FLG_GPF ,
LOY_FLG_MAIN ,
LOY_PCT_CEM ,
LOY_FLG_TR ,
LOY_FLG_ASS ,
LOY_FLG_IP ,
LOY_FLG_AFD ,
LOY_FLG_CARBU ,
FLAG_PNEUS_ETE ,
FLAG_PNEUS_HIVER ,
FLAG_VEHICULE_DE_REMPLACEMENT ,
FLAG_CEM_FLEX ,
FLAG_PNEU_MIXTE ,
FLAG_JOCKEY ,
FLAG_PASS_RESTIT ,
VEH_FAM ,
VEH_LIB_LS ,
VEH_LCDV ,
VEH_LCDV_LIB ,
CARROSSERIE ,
VEH_COUL ,
VEH_GENRE ,
VEH_NRJ ,
VEH_CO2 ,
VEH_PUIS_FISC ,
VEH_TYP_MINE ,
VEH_NO_SERIE ,
VEH_BLVD ,
VEH_NO_IMMAT ,
CTR_DT_LIV ,
NOM_CHAUFFEUR ,
GENRE_CD_TRANSCO ,
VEH_MTHT_CAT ,
VEH_MTHT_OPT ,
VEH_PCT_REM ,
VEH_MTHT_ACC ,
VEH_MTHT_TRANS ,
VEH_GARN ,
VEH_OPT1 ,
VEH_OPT2 ,
VEH_OPT3 ,
VEH_OPT4 ,
VEH_OPT5 ,
VEH_OPT6 ,
VEH_OPT7 ,
VEH_OPT8 ,
VEH_OPT9 ,
VEH_OPT10 ,
VEH_OPT11 ,
VEH_ACC1 ,
VEH_ACC2 ,
VEH_ACC3 ,
VEH_ACC4 ,
VEH_ACC5 ,
VEH_TRF1 ,
VEH_TRF2 ,
VEH_TRF3 ,
VEH_TRF4 ,
PDV_RP_RRDI ,
PDV_RP_NOM ,
PDV_REPRENEUR_RAISON_SOCIALE ,
PDV_REPRENEUR_ADRESSE ,
PDV_REPRENEUR_CODE_POSTAL ,
PDV_REPRENEUR_VILLE ,
PDV_FT_RRDI ,
PDV_FT_NOM ,
CD_VENDEUR ,
PDV_VD_NOM ,
PDV_FOURNISSEUR_RAISON_SOCIALE ,
PDV_FOURNISSEUR_ADRESSE ,
PDV_FOURNISSEUR_CODE_POSTAL ,
PDV_FOURNISSEUR_VILLE 
								)
						VALUES
								(                /* TT */
               to_char(sysdate, 'DD/MM/YYYY'),
                'ES',
S_FDSQTT_TESTFORMAT_C.CD_PAYS ,
S_FDSQTT_TESTFORMAT_C.CD_SOURCE ,
S_FDSQTT_TESTFORMAT_C.RESEAU ,
S_FDSQTT_TESTFORMAT_C.CTR_NUM ,
S_FDSQTT_TESTFORMAT_C.CTR_NUM ,
S_FDSQTT_TESTFORMAT_C.BUY_BACK_TYPE ,
S_FDSQTT_TESTFORMAT_C.CL_SIREN ,
S_FDSQTT_TESTFORMAT_C.CL_NOM ,
S_FDSQTT_TESTFORMAT_C.TVA_CD ,
S_FDSQTT_TESTFORMAT_C.CL_TYP_LIB ,
S_FDSQTT_TESTFORMAT_C.CL_APE_CD ,
S_FDSQTT_TESTFORMAT_C.CL_APE_LIB ,
S_FDSQTT_TESTFORMAT_C.CL_ADR_FACT ,
S_FDSQTT_TESTFORMAT_C.CL_ADR_CP ,
S_FDSQTT_TESTFORMAT_C.CL_ADR_VILLE ,
S_FDSQTT_TESTFORMAT_C.CTR_RETAIL ,
S_FDSQTT_TESTFORMAT_C.CIVILITE_SIGNATAIRE ,
S_FDSQTT_TESTFORMAT_C.NOM_SIGNATAIRE ,
S_FDSQTT_TESTFORMAT_C.PRENOM_SIGNATAIRE ,
S_FDSQTT_TESTFORMAT_C.TEL_CONTACT ,
S_FDSQTT_TESTFORMAT_C.EMAIL_SIGNATAIRE ,
S_FDSQTT_TESTFORMAT_C.DUREE_INI ,
S_FDSQTT_TESTFORMAT_C.KM_PIVOT_INI ,
S_FDSQTT_TESTFORMAT_C.ER_PIVOT_INI ,
S_FDSQTT_TESTFORMAT_C.CTR_DT_FIN ,
S_FDSQTT_TESTFORMAT_C.CTR_DMIN_B2 ,
S_FDSQTT_TESTFORMAT_C.CTR_DMIN_B1 ,
S_FDSQTT_TESTFORMAT_C.CTR_DTOT ,
S_FDSQTT_TESTFORMAT_C.CTR_DMAX_B1 ,
S_FDSQTT_TESTFORMAT_C.CTR_DMAX_B2 ,
S_FDSQTT_TESTFORMAT_C.CTR_KMIN_B2 ,
S_FDSQTT_TESTFORMAT_C.CTR_KMIN_B1 ,
S_FDSQTT_TESTFORMAT_C.CTR_KM_PIVOT ,
S_FDSQTT_TESTFORMAT_C.CTR_KMAX_B1 ,
S_FDSQTT_TESTFORMAT_C.CTR_KMAX_B2 ,
S_FDSQTT_TESTFORMAT_C.CTR_ERMIN_B2 ,
S_FDSQTT_TESTFORMAT_C.CTR_ERMIN_B1 ,
S_FDSQTT_TESTFORMAT_C.CTR_ER_HT ,
S_FDSQTT_TESTFORMAT_C.CTR_ERMAX_B1 ,
S_FDSQTT_TESTFORMAT_C.CTR_ERMAX_B2 ,
S_FDSQTT_TESTFORMAT_C.GIFP_DER_KM ,
S_FDSQTT_TESTFORMAT_C.GIFP_DT_DER_KM ,
S_FDSQTT_TESTFORMAT_C.GIFP_ORIG_DER_KM ,
S_FDSQTT_TESTFORMAT_C.GIFP_PROJ_KM_FCT ,
S_FDSQTT_TESTFORMAT_C.v_ecart_km ,
S_FDSQTT_TESTFORMAT_C.CTR_TYP_SOUP ,
S_FDSQTT_TESTFORMAT_C.REDEV_KM_EXCED ,
S_FDSQTT_TESTFORMAT_C.LOY_MTHT_FIN ,
S_FDSQTT_TESTFORMAT_C.LOY_MT_HT ,
S_FDSQTT_TESTFORMAT_C.LOY_MT_TTC ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_GPF ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_MAIN ,
S_FDSQTT_TESTFORMAT_C.LOY_PCT_CEM ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_TR ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_ASS ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_IP ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_AFD ,
S_FDSQTT_TESTFORMAT_C.LOY_FLG_CARBU ,
S_FDSQTT_TESTFORMAT_C.FLAG_PNEUS_ETE ,
S_FDSQTT_TESTFORMAT_C.FLAG_PNEUS_HIVER ,
S_FDSQTT_TESTFORMAT_C.FLAG_VEHICULE_DE_REMPLACEMENT ,
S_FDSQTT_TESTFORMAT_C.FLAG_CEM_FLEX ,
S_FDSQTT_TESTFORMAT_C.FLAG_PNEU_MIXTE ,
S_FDSQTT_TESTFORMAT_C.FLAG_JOCKEY ,
S_FDSQTT_TESTFORMAT_C.FLAG_PASS_RESTIT ,
S_FDSQTT_TESTFORMAT_C.VEH_FAM ,
S_FDSQTT_TESTFORMAT_C.VEH_LIB_LS ,
S_FDSQTT_TESTFORMAT_C.VEH_LCDV ,
S_FDSQTT_TESTFORMAT_C.VEH_LCDV_LIB ,
S_FDSQTT_TESTFORMAT_C.CARROSSERIE ,
S_FDSQTT_TESTFORMAT_C.VEH_COUL ,
S_FDSQTT_TESTFORMAT_C.VEH_GENRE ,
S_FDSQTT_TESTFORMAT_C.VEH_NRJ ,
S_FDSQTT_TESTFORMAT_C.VEH_CO2 ,
S_FDSQTT_TESTFORMAT_C.VEH_PUIS_FISC ,
S_FDSQTT_TESTFORMAT_C.VEH_TYP_MINE ,
S_FDSQTT_TESTFORMAT_C.VEH_NO_SERIE ,
S_FDSQTT_TESTFORMAT_C.VEH_BLVD ,
S_FDSQTT_TESTFORMAT_C.VEH_NO_IMMAT ,
S_FDSQTT_TESTFORMAT_C.CTR_DT_LIV ,
S_FDSQTT_TESTFORMAT_C.NOM_CHAUFFEUR ,
S_FDSQTT_TESTFORMAT_C.GENRE_CD_TRANSCO ,
S_FDSQTT_TESTFORMAT_C.VEH_MTHT_CAT ,
S_FDSQTT_TESTFORMAT_C.VEH_MTHT_OPT ,
S_FDSQTT_TESTFORMAT_C.VEH_PCT_REM ,
S_FDSQTT_TESTFORMAT_C.VEH_MTHT_ACC ,
S_FDSQTT_TESTFORMAT_C.VEH_MTHT_TRANS ,
S_FDSQTT_TESTFORMAT_C.VEH_GARN ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT1 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT2 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT3 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT4 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT5 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT6 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT7 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT8 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT9 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT10 ,
S_FDSQTT_TESTFORMAT_C.VEH_OPT11 ,
S_FDSQTT_TESTFORMAT_C.VEH_ACC1 ,
S_FDSQTT_TESTFORMAT_C.VEH_ACC2 ,
S_FDSQTT_TESTFORMAT_C.VEH_ACC3 ,
S_FDSQTT_TESTFORMAT_C.VEH_ACC4 ,
S_FDSQTT_TESTFORMAT_C.VEH_ACC5 ,
S_FDSQTT_TESTFORMAT_C.VEH_TRF1 ,
S_FDSQTT_TESTFORMAT_C.VEH_TRF2 ,
S_FDSQTT_TESTFORMAT_C.VEH_TRF3 ,
S_FDSQTT_TESTFORMAT_C.VEH_TRF4 ,
S_FDSQTT_TESTFORMAT_C.PDV_RP_RRDI ,
S_FDSQTT_TESTFORMAT_C.PDV_RP_NOM ,
S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_RAISON_SOCIALE ,
S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_ADRESSE ,
S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_CODE_POSTAL ,
S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_VILLE ,
S_FDSQTT_TESTFORMAT_C.PDV_FT_RRDI ,
S_FDSQTT_TESTFORMAT_C.PDV_FT_NOM ,
S_FDSQTT_TESTFORMAT_C.CD_VENDEUR ,
S_FDSQTT_TESTFORMAT_C.PDV_VD_NOM ,
S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_RAISON_SOCIALE ,
S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_ADRESSE ,
S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_CODE_POSTAL ,
S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_VILLE 
										
								);

						V_INS := V_INS + 1;

					
					EXCEPTION

						WHEN DUP_VAL_ON_INDEX THEN
						UPDATE  FPH.FPHQT_ES_CTT     /* T */
						SET     /* TT */
       Date_traitement    = S_FDSQTT_TESTFORMAT_C.Date_traitement,
RESEAU = S_FDSQTT_TESTFORMAT_C.RESEAU,
--CD_PAYS  =  S_FDSQTT_TESTFORMAT_C.CD_PAYS ,
CD_SOURCE  =  S_FDSQTT_TESTFORMAT_C.CD_SOURCE ,
RESEAU  =  S_FDSQTT_TESTFORMAT_C.RESEAU ,
--CTR_NUM  =  S_FDSQTT_TESTFORMAT_C.CTR_NUM ,
--CTR_NUM  =  S_FDSQTT_TESTFORMAT_C.CTR_NUM ,
BUY_BACK_TYPE  =  S_FDSQTT_TESTFORMAT_C.BUY_BACK_TYPE ,
CL_SIREN  =  S_FDSQTT_TESTFORMAT_C.CL_SIREN ,
CL_NOM  =  S_FDSQTT_TESTFORMAT_C.CL_NOM ,
TVA_CD  =  S_FDSQTT_TESTFORMAT_C.TVA_CD ,
CL_TYP_LIB  =  S_FDSQTT_TESTFORMAT_C.CL_TYP_LIB ,
CL_APE_CD  =  S_FDSQTT_TESTFORMAT_C.CL_APE_CD ,
CL_APE_LIB  =  S_FDSQTT_TESTFORMAT_C.CL_APE_LIB ,
CL_ADR_FACT  =  S_FDSQTT_TESTFORMAT_C.CL_ADR_FACT ,
CL_ADR_CP  =  S_FDSQTT_TESTFORMAT_C.CL_ADR_CP ,
CL_ADR_VILLE  =  S_FDSQTT_TESTFORMAT_C.CL_ADR_VILLE ,
CTR_RETAIL  =  S_FDSQTT_TESTFORMAT_C.CTR_RETAIL ,
CIVILITE_SIGNATAIRE  =  S_FDSQTT_TESTFORMAT_C.CIVILITE_SIGNATAIRE ,
NOM_SIGNATAIRE  =  S_FDSQTT_TESTFORMAT_C.NOM_SIGNATAIRE ,
PRENOM_SIGNATAIRE  =  S_FDSQTT_TESTFORMAT_C.PRENOM_SIGNATAIRE ,
TEL_CONTACT  =  S_FDSQTT_TESTFORMAT_C.TEL_CONTACT ,
EMAIL_SIGNATAIRE  =  S_FDSQTT_TESTFORMAT_C.EMAIL_SIGNATAIRE ,
DUREE_INI  =  S_FDSQTT_TESTFORMAT_C.DUREE_INI ,
KM_PIVOT_INI  =  S_FDSQTT_TESTFORMAT_C.KM_PIVOT_INI ,
ER_PIVOT_INI  =  S_FDSQTT_TESTFORMAT_C.ER_PIVOT_INI ,
CTR_DT_FIN  =  S_FDSQTT_TESTFORMAT_C.CTR_DT_FIN ,
CTR_DMIN_B2  =  S_FDSQTT_TESTFORMAT_C.CTR_DMIN_B2 ,
CTR_DMIN_B1  =  S_FDSQTT_TESTFORMAT_C.CTR_DMIN_B1 ,
CTR_DTOT  =  S_FDSQTT_TESTFORMAT_C.CTR_DTOT ,
CTR_DMAX_B1  =  S_FDSQTT_TESTFORMAT_C.CTR_DMAX_B1 ,
CTR_DMAX_B2  =  S_FDSQTT_TESTFORMAT_C.CTR_DMAX_B2 ,
CTR_KMIN_B2  =  S_FDSQTT_TESTFORMAT_C.CTR_KMIN_B2 ,
CTR_KMIN_B1  =  S_FDSQTT_TESTFORMAT_C.CTR_KMIN_B1 ,
CTR_KM_PIVOT  =  S_FDSQTT_TESTFORMAT_C.CTR_KM_PIVOT ,
CTR_KMAX_B1  =  S_FDSQTT_TESTFORMAT_C.CTR_KMAX_B1 ,
CTR_KMAX_B2  =  S_FDSQTT_TESTFORMAT_C.CTR_KMAX_B2 ,
CTR_ERMIN_B2  =  S_FDSQTT_TESTFORMAT_C.CTR_ERMIN_B2 ,
CTR_ERMIN_B1  =  S_FDSQTT_TESTFORMAT_C.CTR_ERMIN_B1 ,
CTR_ER_HT  =  S_FDSQTT_TESTFORMAT_C.CTR_ER_HT ,
CTR_ERMAX_B1  =  S_FDSQTT_TESTFORMAT_C.CTR_ERMAX_B1 ,
CTR_ERMAX_B2  =  S_FDSQTT_TESTFORMAT_C.CTR_ERMAX_B2 ,
GIFP_DER_KM  =  S_FDSQTT_TESTFORMAT_C.GIFP_DER_KM ,
GIFP_DT_DER_KM  =  S_FDSQTT_TESTFORMAT_C.GIFP_DT_DER_KM ,
GIFP_ORIG_DER_KM  =  S_FDSQTT_TESTFORMAT_C.GIFP_ORIG_DER_KM ,
GIFP_PROJ_KM_FCT  =  S_FDSQTT_TESTFORMAT_C.GIFP_PROJ_KM_FCT ,
v_ecart_km  =  S_FDSQTT_TESTFORMAT_C.v_ecart_km ,
CTR_TYP_SOUP  =  S_FDSQTT_TESTFORMAT_C.CTR_TYP_SOUP ,
REDEV_KM_EXCED  =  S_FDSQTT_TESTFORMAT_C.REDEV_KM_EXCED ,
LOY_MTHT_FIN  =  S_FDSQTT_TESTFORMAT_C.LOY_MTHT_FIN ,
LOY_MT_HT  =  S_FDSQTT_TESTFORMAT_C.LOY_MT_HT ,
LOY_MT_TTC  =  S_FDSQTT_TESTFORMAT_C.LOY_MT_TTC ,
LOY_FLG_GPF  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_GPF ,
LOY_FLG_MAIN  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_MAIN ,
LOY_PCT_CEM  =  S_FDSQTT_TESTFORMAT_C.LOY_PCT_CEM ,
LOY_FLG_TR  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_TR ,
LOY_FLG_ASS  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_ASS ,
LOY_FLG_IP  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_IP ,
LOY_FLG_AFD  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_AFD ,
LOY_FLG_CARBU  =  S_FDSQTT_TESTFORMAT_C.LOY_FLG_CARBU ,
FLAG_PNEUS_ETE  =  S_FDSQTT_TESTFORMAT_C.FLAG_PNEUS_ETE ,
FLAG_PNEUS_HIVER  =  S_FDSQTT_TESTFORMAT_C.FLAG_PNEUS_HIVER ,
FLAG_VEHICULE_DE_REMPLACEMENT  =  S_FDSQTT_TESTFORMAT_C.FLAG_VEHICULE_DE_REMPLACEMENT ,
FLAG_CEM_FLEX  =  S_FDSQTT_TESTFORMAT_C.FLAG_CEM_FLEX ,
FLAG_PNEU_MIXTE  =  S_FDSQTT_TESTFORMAT_C.FLAG_PNEU_MIXTE ,
FLAG_JOCKEY  =  S_FDSQTT_TESTFORMAT_C.FLAG_JOCKEY ,
FLAG_PASS_RESTIT  =  S_FDSQTT_TESTFORMAT_C.FLAG_PASS_RESTIT ,
--VEH_FAM  =  S_FDSQTT_TESTFORMAT_C.VEH_FAM ,
VEH_LIB_LS  =  S_FDSQTT_TESTFORMAT_C.VEH_LIB_LS ,
VEH_LCDV  =  S_FDSQTT_TESTFORMAT_C.VEH_LCDV ,
VEH_LCDV_LIB  =  S_FDSQTT_TESTFORMAT_C.VEH_LCDV_LIB ,
CARROSSERIE  =  S_FDSQTT_TESTFORMAT_C.CARROSSERIE ,
VEH_COUL  =  S_FDSQTT_TESTFORMAT_C.VEH_COUL ,
VEH_GENRE  =  S_FDSQTT_TESTFORMAT_C.VEH_GENRE ,
VEH_NRJ  =  S_FDSQTT_TESTFORMAT_C.VEH_NRJ ,
VEH_CO2  =  S_FDSQTT_TESTFORMAT_C.VEH_CO2 ,
VEH_PUIS_FISC  =  S_FDSQTT_TESTFORMAT_C.VEH_PUIS_FISC ,
--VEH_TYP_MINE  =  S_FDSQTT_TESTFORMAT_C.VEH_TYP_MINE ,
--VEH_NO_SERIE  =  S_FDSQTT_TESTFORMAT_C.VEH_NO_SERIE ,
VEH_BLVD  =  S_FDSQTT_TESTFORMAT_C.VEH_BLVD ,
VEH_NO_IMMAT  =  S_FDSQTT_TESTFORMAT_C.VEH_NO_IMMAT ,
CTR_DT_LIV  =  S_FDSQTT_TESTFORMAT_C.CTR_DT_LIV ,
NOM_CHAUFFEUR  =  S_FDSQTT_TESTFORMAT_C.NOM_CHAUFFEUR ,
GENRE_CD_TRANSCO  =  S_FDSQTT_TESTFORMAT_C.GENRE_CD_TRANSCO ,
VEH_MTHT_CAT  =  S_FDSQTT_TESTFORMAT_C.VEH_MTHT_CAT ,
VEH_MTHT_OPT  =  S_FDSQTT_TESTFORMAT_C.VEH_MTHT_OPT ,
VEH_PCT_REM  =  S_FDSQTT_TESTFORMAT_C.VEH_PCT_REM ,
VEH_MTHT_ACC  =  S_FDSQTT_TESTFORMAT_C.VEH_MTHT_ACC ,
VEH_MTHT_TRANS  =  S_FDSQTT_TESTFORMAT_C.VEH_MTHT_TRANS ,
VEH_GARN  =  S_FDSQTT_TESTFORMAT_C.VEH_GARN ,
VEH_OPT1  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT1 ,
VEH_OPT2  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT2 ,
VEH_OPT3  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT3 ,
VEH_OPT4  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT4 ,
VEH_OPT5  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT5 ,
VEH_OPT6  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT6 ,
VEH_OPT7  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT7 ,
VEH_OPT8  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT8 ,
VEH_OPT9  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT9 ,
VEH_OPT10  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT10 ,
VEH_OPT11  =  S_FDSQTT_TESTFORMAT_C.VEH_OPT11 ,
VEH_ACC1  =  S_FDSQTT_TESTFORMAT_C.VEH_ACC1 ,
VEH_ACC2  =  S_FDSQTT_TESTFORMAT_C.VEH_ACC2 ,
VEH_ACC3  =  S_FDSQTT_TESTFORMAT_C.VEH_ACC3 ,
VEH_ACC4  =  S_FDSQTT_TESTFORMAT_C.VEH_ACC4 ,
VEH_ACC5  =  S_FDSQTT_TESTFORMAT_C.VEH_ACC5 ,
VEH_TRF1  =  S_FDSQTT_TESTFORMAT_C.VEH_TRF1 ,
VEH_TRF2  =  S_FDSQTT_TESTFORMAT_C.VEH_TRF2 ,
VEH_TRF3  =  S_FDSQTT_TESTFORMAT_C.VEH_TRF3 ,
VEH_TRF4  =  S_FDSQTT_TESTFORMAT_C.VEH_TRF4 ,
PDV_RP_RRDI  =  S_FDSQTT_TESTFORMAT_C.PDV_RP_RRDI ,
PDV_RP_NOM  =  S_FDSQTT_TESTFORMAT_C.PDV_RP_NOM ,
PDV_REPRENEUR_RAISON_SOCIALE  =  S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_RAISON_SOCIALE ,
PDV_REPRENEUR_ADRESSE  =  S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_ADRESSE ,
PDV_REPRENEUR_CODE_POSTAL  =  S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_CODE_POSTAL ,
PDV_REPRENEUR_VILLE  =  S_FDSQTT_TESTFORMAT_C.PDV_REPRENEUR_VILLE ,
PDV_FT_RRDI  =  S_FDSQTT_TESTFORMAT_C.PDV_FT_RRDI ,
PDV_FT_NOM  =  S_FDSQTT_TESTFORMAT_C.PDV_FT_NOM ,
CD_VENDEUR  =  S_FDSQTT_TESTFORMAT_C.CD_VENDEUR ,
PDV_VD_NOM  =  S_FDSQTT_TESTFORMAT_C.PDV_VD_NOM ,
PDV_FOURNISSEUR_RAISON_SOCIALE  =  S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_RAISON_SOCIALE ,
PDV_FOURNISSEUR_ADRESSE  =  S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_ADRESSE ,
PDV_FOURNISSEUR_CODE_POSTAL  =  S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_CODE_POSTAL ,
PDV_FOURNISSEUR_VILLE  =  S_FDSQTT_TESTFORMAT_C.PDV_FOURNISSEUR_VILLE 

                where CTR_NUM = S_FDSQTT_TESTFORMAT_C.CTR_NUM     ----CTR_NUM, VEH_TYP_MINE, VEH_NO_SERIE, VEH_FAM, CD_PAYS   ---S_Lssrvc_Sid  =  S_Fdsqtt_Testformat_C.S_Lssrvc_Sid;
               and  VEH_TYP_MINE =  S_FDSQTT_TESTFORMAT_C.VEH_TYP_MINE
                and VEH_NO_SERIE =  S_FDSQTT_TESTFORMAT_C.VEH_NO_SERIE
                and FV_CD_FAM_VEHICULE = S_FDSQTT_TESTFORMAT_C.FV_CD_FAM_VEHICULE
                and CD_PAYS ='ES' ;
                
															--IE_AFFAIRE, VB_VIN, DE_FG_VERSION, FV_CD_FAM_VEHICULE, FV_CDPAYS
					
						V_UPD := V_UPD + 1;

		
						WHEN OTHERS THEN  
							COMMIT;  
							V_ERR := 1;
              
							V_ERROR := SUBSTR('SQLCODE: '||TO_CHAR(SQLCODE)||' -ERROR: '||SQLERRM,1,4000);   
							RES := FPHQAUT.F_WRITE(FILE_ID, 'ALIM_DONNEES_FDSQT2_ES ## Message Erreur pl/sql :' ||SQLERRM);
								
						RETURN V_ERR;
					END;
				END LOOP;

				COMMIT;

     res := FPHQAUT.F_WRITE(file_id, 'ALIM_LSITCVVN Nombre de creations :'||V_INS);
     res := FPHQAUT.F_WRITE(file_id, 'ALIM_LSITCVVN Nombre de mises a jour :'||V_UPD);
     --res := FPHQAUT.F_WRITE(file_id, 'ALIM_LSITCVVN Nombre de suppressions :'||v_SUP);
     res := FPHQAUT.F_WRITE(file_id, '');
     UTL_FILE.FCLOSE(file_id);
     -- 
     v_inserts := V_INS;
     v_updates := V_UPD;
				RETURN V_ERR;
			End;

		/* end; */
   

    
  END ALIM_DONNEES_FDSQT2_ES;








  FUNCTION EXPORT_FDSQT2_ES (NOMLOG      VARCHAR2,
                        P_DATE_TRAI DATE,                 
                       P_PATH    VARCHAR2,
                        P_FILENAME  VARCHAR2) RETURN NUMBER AS
  BEGIN
    /* TODO implementation required */
    RETURN NULL;
  END EXPORT_FDSQT2_ES;





  FUNCTION MAIN_FDSQT2_ES (NMLOG      VARCHAR2,
                              P_DATE_TRAI DATE,
                              P_PATH VARCHAR2,
                              P_FILENAME VARCHAR2) RETURN NUMBER AS
  BEGIN
    /* TODO implementation required */
    RETURN NULL;
  END MAIN_FDSQT2_ES;

END FPHQACT2
